{
  "messages": [
    {
      "role": "consultant",
      "content": "Hi, I am Plugin Pal - your WordPress plugin assistant!\n To begin, please describe the plugin you want to create.",
      "requirements": {},
      "requirements_finalized": false
    },
    {
      "role": "user",
      "content": "Build me plugin that shows the weather for the next few days in Switzerland"
    },
    {
      "role": "consultant",
      "content": "Got it! To tailor this, could you confirm: 1) Which Swiss location(s) should it show\u2014one city, multiple, or auto-detect within Switzerland? 2) How many days of forecast do you want (3, 5, or 7)? 3) Where on your site should it appear (a specific page, homepage section, or sidebar)? And what language should labels use (English, German, French, or Italian)?",
      "requirements_finalized": false,
      "requirements": {
        "name": "Swiss Weather Forecast",
        "description": "Shows upcoming weather in Switzerland.",
        "details": "A simple plugin that displays a short-term weather forecast for locations in Switzerland. Site admin can choose one or more Swiss towns/cities and the number of forecast days (default 5). It shows daily high/low temperature, condition icon/summary, and chance of precipitation in Celsius. The display is clean, responsive, and blends with the site\u2019s theme. Text labels can be shown in a chosen language (default English). The forecast can be placed on a page or in a common site area (e.g., homepage section or sidebar). Includes a basic settings screen for location(s), days, title, and language. Uses a reliable weather data source."
      }
    },
    {
      "role": "user",
      "content": "Take Zurich, for the next 5 days and let it be in English right on the main section of the home page"
    },
    {
      "role": "consultant",
      "content": "Perfect\u2014Zurich, 5 days, in English, shown in the main section of your homepage. I\u2019ll proceed with this plan now; please sit tight while the plugin is generated.",
      "requirements_finalized": true,
      "requirements": {
        "name": "Swiss Weather Forecast",
        "description": "Shows a 5\u2011day Zurich weather forecast on the homepage.",
        "details": "Create a lightweight plugin that displays a clean, responsive 5\u2011day weather forecast for Zurich, Switzerland in English. It should appear in the main content area of the homepage and show, per day: high/low temperature in \u00b0C, a weather icon, a short condition label (e.g., \u201cPartly cloudy\u201d), and chance of precipitation. The design should blend with the site\u2019s theme and work well on mobile and desktop. Use a reliable weather data source and handle temporary data errors with a brief friendly message. No extra controls or locations are needed."
      }
    },
    {
      "role": "developer",
      "content": "I've created your plugin, packaged as a zip, ready to download and install!. Here are some instructions on how to get started with it:\n'''\n# Instructions\nIn your WordPress dashboard, go to Plugins > Add New > Upload Plugin, choose the ZIP we provided, then click Install Now and Activate. Next, visit your site\u2019s homepage\u2014the 5\u2011day Zurich forecast will automatically appear at the top of the main content. If you don\u2019t see it, refresh the page and make sure your homepage is set as the site\u2019s front page.\n'''",
      "zip_id": 0,
      "raw_response": "## Folder Structure\n```\nswiss-weather-forecast/\n\u251c\u2500\u2500 assets/\n\u2502   \u2514\u2500\u2500 css/\n\u2502       \u2514\u2500\u2500 style.css\n\u251c\u2500\u2500 includes/\n\u2502   \u2514\u2500\u2500 class-swf-forecast.php\n\u251c\u2500\u2500 languages/\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 forecast.php\n\u251c\u2500\u2500 readme.txt\n\u251c\u2500\u2500 swiss-weather-forecast.php\n\u2514\u2500\u2500 uninstall.php\n```\n\n## Plugin Files\n```json\n{\n  \"swiss-weather-forecast/swiss-weather-forecast.php\": \"<?php\\n/**\\n * Plugin Name: Swiss Weather Forecast\\n * Description: Shows a 5\\u2011day Zurich weather forecast on the homepage.\\n * Version: 1.0.0\\n * Author: makeplugin\\n * Text Domain: swiss-weather-forecast\\n * License: GPLv2 or later\\n * Requires PHP: 7.4\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nif (!defined('SWF_VERSION')) {\\n    define('SWF_VERSION', '1.0.0');\\n}\\nif (!defined('SWF_PLUGIN_FILE')) {\\n    define('SWF_PLUGIN_FILE', __FILE__);\\n}\\nif (!defined('SWF_PLUGIN_DIR')) {\\n    define('SWF_PLUGIN_DIR', plugin_dir_path(__FILE__));\\n}\\nif (!defined('SWF_PLUGIN_URL')) {\\n    define('SWF_PLUGIN_URL', plugin_dir_url(__FILE__));\\n}\\n\\n// Load textdomain\\nfunction swf_load_textdomain() {\\n    load_plugin_textdomain('swiss-weather-forecast', false, dirname(plugin_basename(__FILE__)) . '/languages/');\\n}\\nadd_action('plugins_loaded', 'swf_load_textdomain');\\n\\n// Include core class\\nrequire_once SWF_PLUGIN_DIR . 'includes/class-swf-forecast.php';\\n\\n// Enqueue styles on front-end\\nfunction swf_enqueue_assets() {\\n    if (!is_admin() && is_front_page()) {\\n        wp_enqueue_style(\\n            'swf-style',\\n            SWF_PLUGIN_URL . 'assets/css/style.css',\\n            array(),\\n            SWF_VERSION\\n        );\\n    }\\n}\\nadd_action('wp_enqueue_scripts', 'swf_enqueue_assets');\\n\\n// Inject forecast into homepage content\\nfunction swf_inject_forecast_into_home($content) {\\n    if (!is_front_page() || is_admin()) {\\n        return $content;\\n    }\\n\\n    static $did_inject = false;\\n    if ($did_inject) {\\n        return $content;\\n    }\\n\\n    $did_inject = true;\\n\\n    $forecast_html = SWF_Forecast::instance()->render();\\n\\n    if (!empty($forecast_html)) {\\n        // Prepend forecast to the main content\\n        $content = $forecast_html . $content;\\n    }\\n\\n    return $content;\\n}\\nadd_filter('the_content', 'swf_inject_forecast_into_home', 20);\\n\",\n  \"swiss-weather-forecast/includes/class-swf-forecast.php\": \"<?php\\n/**\\n * Core forecast class for Swiss Weather Forecast\\n *\\n * @package SwissWeatherForecast\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nclass SWF_Forecast {\\n    /**\\n     * Singleton instance\\n     * @var SWF_Forecast|null\\n     */\\n    private static $instance = null;\\n\\n    /**\\n     * Get instance\\n     * @return SWF_Forecast\\n     */\\n    public static function instance() {\\n        if (null === self::$instance) {\\n            self::$instance = new self();\\n        }\\n        return self::$instance;\\n    }\\n\\n    /**\\n     * Fetch and format forecast data\\n     * @return array|WP_Error\\n     */\\n    public function get_forecast() {\\n        $cached = get_transient('swf_forecast_data');\\n        if ($cached && is_array($cached)) {\\n            return $cached;\\n        }\\n\\n        $lat = '47.3769';\\n        $lon = '8.5417';\\n        $params = array(\\n            'latitude'  => $lat,\\n            'longitude' => $lon,\\n            'daily'     => 'temperature_2m_max,temperature_2m_min,precipitation_probability_mean,weathercode',\\n            'timezone'  => 'Europe/Zurich',\\n            'forecast_days' => 5,\\n        );\\n\\n        $url = add_query_arg($params, 'https://api.open-meteo.com/v1/forecast');\\n\\n        $response = wp_remote_get($url, array(\\n            'timeout' => 10,\\n            'headers' => array(\\n                'Accept' => 'application/json'\\n            )\\n        ));\\n\\n        if (is_wp_error($response)) {\\n            return $response;\\n        }\\n\\n        $code = wp_remote_retrieve_response_code($response);\\n        if ((int) $code !== 200) {\\n            return new WP_Error('swf_http_error', esc_html__('Unable to retrieve weather data at the moment.', 'swiss-weather-forecast'));\\n        }\\n\\n        $body = wp_remote_retrieve_body($response);\\n        $data = json_decode($body, true);\\n\\n        if (!is_array($data) || empty($data['daily'])) {\\n            return new WP_Error('swf_bad_data', esc_html__('Weather data is temporarily unavailable.', 'swiss-weather-forecast'));\\n        }\\n\\n        $daily = $data['daily'];\\n        $days = array();\\n\\n        $count = min(5, isset($daily['time']) ? count($daily['time']) : 0);\\n        for ($i = 0; $i < $count; $i++) {\\n            $date_str = isset($daily['time'][$i]) ? sanitize_text_field($daily['time'][$i]) : '';\\n            $max = isset($daily['temperature_2m_max'][$i]) ? floatval($daily['temperature_2m_max'][$i]) : null;\\n            $min = isset($daily['temperature_2m_min'][$i]) ? floatval($daily['temperature_2m_min'][$i]) : null;\\n            $pop = isset($daily['precipitation_probability_mean'][$i]) ? intval($daily['precipitation_probability_mean'][$i]) : null;\\n            $wcode = isset($daily['weathercode'][$i]) ? intval($daily['weathercode'][$i]) : null;\\n\\n            $label = $this->weathercode_label($wcode);\\n            $icon_svg = $this->weathercode_icon_svg($wcode);\\n\\n            $days[] = array(\\n                'date' => $date_str,\\n                'max'  => $max,\\n                'min'  => $min,\\n                'pop'  => $pop,\\n                'label'=> $label,\\n                'icon' => $icon_svg,\\n            );\\n        }\\n\\n        // Cache for 30 minutes\\n        set_transient('swf_forecast_data', $days, 30 * MINUTE_IN_SECONDS);\\n\\n        return $days;\\n    }\\n\\n    /**\\n     * Render forecast HTML\\n     * @return string\\n     */\\n    public function render() {\\n        $forecast = $this->get_forecast();\\n\\n        if (is_wp_error($forecast)) {\\n            $message = $forecast->get_error_message();\\n            if (empty($message)) {\\n                $message = esc_html__('Weather data is temporarily unavailable.', 'swiss-weather-forecast');\\n            }\\n            $out  = '<div class=\\\"swf-forecast swf-error\\\">';\\n            $out .= '<p>' . esc_html($message) . '</p>';\\n            $out .= '</div>';\\n            return $out;\\n        }\\n\\n        if (empty($forecast)) {\\n            $out  = '<div class=\\\"swf-forecast swf-error\\\">';\\n            $out .= '<p>' . esc_html__('Weather data is temporarily unavailable.', 'swiss-weather-forecast') . '</p>';\\n            $out .= '</div>';\\n            return $out;\\n        }\\n\\n        ob_start();\\n        $days = $this->sanitize_days($forecast);\\n        $title = esc_html__('Zurich 5\\u2011day Forecast', 'swiss-weather-forecast');\\n        include SWF_PLUGIN_DIR . 'templates/forecast.php';\\n        $html = ob_get_clean();\\n        return $html;\\n    }\\n\\n    /**\\n     * Sanitize days array for template\\n     * @param array $days\\n     * @return array\\n     */\\n    private function sanitize_days($days) {\\n        $out = array();\\n        foreach ($days as $d) {\\n            $date = isset($d['date']) ? sanitize_text_field($d['date']) : '';\\n            $timestamp = strtotime($date);\\n            $day_label = $timestamp ? date_i18n('D', $timestamp) : '';\\n            $date_disp = $timestamp ? date_i18n(get_option('date_format', 'M j'), $timestamp) : '';\\n\\n            $max = isset($d['max']) ? floatval($d['max']) : null;\\n            $min = isset($d['min']) ? floatval($d['min']) : null;\\n            $pop = isset($d['pop']) ? absint($d['pop']) : null;\\n            $label = isset($d['label']) ? sanitize_text_field($d['label']) : '';\\n            $icon = isset($d['icon']) ? $this->sanitize_svg($d['icon']) : '';\\n\\n            $out[] = array(\\n                'day'  => $day_label,\\n                'date' => $date_disp,\\n                'max'  => $max,\\n                'min'  => $min,\\n                'pop'  => $pop,\\n                'label'=> $label,\\n                'icon' => $icon,\\n            );\\n        }\\n        return $out;\\n    }\\n\\n    /**\\n     * Map Open-Meteo WMO weather codes to labels\\n     * @param int|null $code\\n     * @return string\\n     */\\n    private function weathercode_label($code) {\\n        $map = array(\\n            0 => esc_html__('Clear', 'swiss-weather-forecast'),\\n            1 => esc_html__('Mainly clear', 'swiss-weather-forecast'),\\n            2 => esc_html__('Partly cloudy', 'swiss-weather-forecast'),\\n            3 => esc_html__('Overcast', 'swiss-weather-forecast'),\\n            45 => esc_html__('Fog', 'swiss-weather-forecast'),\\n            48 => esc_html__('Depositing rime fog', 'swiss-weather-forecast'),\\n            51 => esc_html__('Light drizzle', 'swiss-weather-forecast'),\\n            53 => esc_html__('Moderate drizzle', 'swiss-weather-forecast'),\\n            55 => esc_html__('Dense drizzle', 'swiss-weather-forecast'),\\n            56 => esc_html__('Light freezing drizzle', 'swiss-weather-forecast'),\\n            57 => esc_html__('Freezing drizzle', 'swiss-weather-forecast'),\\n            61 => esc_html__('Light rain', 'swiss-weather-forecast'),\\n            63 => esc_html__('Moderate rain', 'swiss-weather-forecast'),\\n            65 => esc_html__('Heavy rain', 'swiss-weather-forecast'),\\n            66 => esc_html__('Light freezing rain', 'swiss-weather-forecast'),\\n            67 => esc_html__('Freezing rain', 'swiss-weather-forecast'),\\n            71 => esc_html__('Light snow', 'swiss-weather-forecast'),\\n            73 => esc_html__('Snow', 'swiss-weather-forecast'),\\n            75 => esc_html__('Heavy snow', 'swiss-weather-forecast'),\\n            77 => esc_html__('Snow grains', 'swiss-weather-forecast'),\\n            80 => esc_html__('Light showers', 'swiss-weather-forecast'),\\n            81 => esc_html__('Showers', 'swiss-weather-forecast'),\\n            82 => esc_html__('Heavy showers', 'swiss-weather-forecast'),\\n            85 => esc_html__('Light snow showers', 'swiss-weather-forecast'),\\n            86 => esc_html__('Snow showers', 'swiss-weather-forecast'),\\n            95 => esc_html__('Thunderstorm', 'swiss-weather-forecast'),\\n            96 => esc_html__('Thunderstorm with hail', 'swiss-weather-forecast'),\\n            99 => esc_html__('Thunderstorm with heavy hail', 'swiss-weather-forecast'),\\n        );\\n        if ($code === null) {\\n            return esc_html__('Unknown', 'swiss-weather-forecast');\\n        }\\n        return isset($map[$code]) ? $map[$code] : esc_html__('Unknown', 'swiss-weather-forecast');\\n    }\\n\\n    /**\\n     * Return simple SVG icon for given code\\n     * @param int|null $code\\n     * @return string SVG markup\\n     */\\n    private function weathercode_icon_svg($code) {\\n        $type = 'sun';\\n        if (is_int($code)) {\\n            if (in_array($code, array(0,1), true)) {\\n                $type = 'sun';\\n            } elseif (in_array($code, array(2,3,45,48), true)) {\\n                $type = 'cloud';\\n            } elseif (in_array($code, array(51,53,55,56,57,61,63,65,66,67,80,81,82), true)) {\\n                $type = 'rain';\\n            } elseif (in_array($code, array(71,73,75,77,85,86), true)) {\\n                $type = 'snow';\\n            } elseif (in_array($code, array(95,96,99), true)) {\\n                $type = 'storm';\\n            }\\n        }\\n\\n        // Minimal inline SVGs with currentColor, accessible title\\n        /* translators: %s: weather icon type */\\n        $title = sprintf(esc_html__('%s icon', 'swiss-weather-forecast'), ucfirst($type));\\n\\n        if ('cloud' === $type) {\\n            return '<svg class=\\\"swf-ico swf-ico-cloud\\\" viewBox=\\\"0 0 64 64\\\" role=\\\"img\\\" aria-label=\\\"' . esc_attr($title) . '\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"currentColor\\\" d=\\\"M20 48h28a12 12 0 0 0 0-24 15 15 0 0 0-29-2 10 10 0 0 0 1 20z\\\"/></svg>';\\n        }\\n        if ('rain' === $type) {\\n            return '<svg class=\\\"swf-ico swf-ico-rain\\\" viewBox=\\\"0 0 64 64\\\" role=\\\"img\\\" aria-label=\\\"' . esc_attr($title) . '\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"currentColor\\\" d=\\\"M20 40h26a10 10 0 0 0 0-20 13 13 0 0 0-25-2 9 9 0 0 0-1 22z\\\"/><g fill=\\\"currentColor\\\"><path d=\\\"M22 48l-2 6\\\"/><path d=\\\"M30 48l-2 6\\\"/><path d=\\\"M38 48l-2 6\\\"/><path d=\\\"M46 48l-2 6\\\"/></g></svg>';\\n        }\\n        if ('snow' === $type) {\\n            return '<svg class=\\\"swf-ico swf-ico-snow\\\" viewBox=\\\"0 0 64 64\\\" role=\\\"img\\\" aria-label=\\\"' . esc_attr($title) . '\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"currentColor\\\" d=\\\"M20 40h26a10 10 0 0 0 0-20 13 13 0 0 0-25-2 9 9 0 0 0-1 22z\\\"/><g fill=\\\"currentColor\\\"><circle cx=\\\"24\\\" cy=\\\"50\\\" r=\\\"2\\\"/><circle cx=\\\"32\\\" cy=\\\"50\\\" r=\\\"2\\\"/><circle cx=\\\"40\\\" cy=\\\"50\\\" r=\\\"2\\\"/></g></svg>';\\n        }\\n        if ('storm' === $type) {\\n            return '<svg class=\\\"swf-ico swf-ico-storm\\\" viewBox=\\\"0 0 64 64\\\" role=\\\"img\\\" aria-label=\\\"' . esc_attr($title) . '\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"currentColor\\\" d=\\\"M20 38h26a10 10 0 0 0 0-20 13 13 0 0 0-25-2 9 9 0 0 0-1 22z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M32 40l-6 12h6l-2 10 10-14h-6l4-8z\\\"/></svg>';\\n        }\\n        // sun\\n        return '<svg class=\\\"swf-ico swf-ico-sun\\\" viewBox=\\\"0 0 64 64\\\" role=\\\"img\\\" aria-label=\\\"' . esc_attr($title) . '\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"32\\\" cy=\\\"32\\\" r=\\\"12\\\" fill=\\\"currentColor\\\"/><g stroke=\\\"currentColor\\\" stroke-width=\\\"4\\\"><line x1=\\\"32\\\" y1=\\\"4\\\" x2=\\\"32\\\" y2=\\\"14\\\"/><line x1=\\\"32\\\" y1=\\\"50\\\" x2=\\\"32\\\" y2=\\\"60\\\"/><line x1=\\\"4\\\" y1=\\\"32\\\" x2=\\\"14\\\" y2=\\\"32\\\"/><line x1=\\\"50\\\" y1=\\\"32\\\" x2=\\\"60\\\" y2=\\\"32\\\"/><line x1=\\\"12\\\" y1=\\\"12\\\" x2=\\\"18\\\" y2=\\\"18\\\"/><line x1=\\\"46\\\" y1=\\\"46\\\" x2=\\\"52\\\" y2=\\\"52\\\"/><line x1=\\\"12\\\" y1=\\\"52\\\" x2=\\\"18\\\" y2=\\\"46\\\"/><line x1=\\\"46\\\" y1=\\\"18\\\" x2=\\\"52\\\" y2=\\\"12\\\"/></g></svg>';\\n    }\\n\\n    /**\\n     * Sanitize limited SVG subset\\n     * @param string $svg\\n     * @return string\\n     */\\n    private function sanitize_svg($svg) {\\n        $allowed = array(\\n            'svg' => array(\\n                'class' => true,\\n                'viewBox' => true,\\n                'role' => true,\\n                'aria-label' => true,\\n                'xmlns' => true,\\n                'width' => true,\\n                'height' => true,\\n            ),\\n            'path' => array(\\n                'fill' => true,\\n                'd' => true,\\n                'stroke' => true,\\n                'stroke-width' => true,\\n            ),\\n            'circle' => array(\\n                'cx' => true,\\n                'cy' => true,\\n                'r' => true,\\n                'fill' => true,\\n            ),\\n            'g' => array(\\n                'fill' => true,\\n                'stroke' => true,\\n                'stroke-width' => true,\\n            ),\\n            'line' => array(\\n                'x1' => true,\\n                'y1' => true,\\n                'x2' => true,\\n                'y2' => true,\\n                'stroke' => true,\\n                'stroke-width' => true,\\n            ),\\n        );\\n        return wp_kses($svg, $allowed);\\n    }\\n}\\n\",\n  \"swiss-weather-forecast/templates/forecast.php\": \"<?php\\n/**\\n * Forecast template\\n *\\n * Expects $days (sanitized array) and $title (escaped string) from SWF_Forecast::render()\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n?>\\n<div class=\\\"swf-forecast\\\" aria-live=\\\"polite\\\">\\n    <h2 class=\\\"swf-title\\\"><?php echo esc_html($title); ?></h2>\\n    <div class=\\\"swf-grid\\\">\\n        <?php foreach ($days as $d) : ?>\\n            <div class=\\\"swf-day\\\" tabindex=\\\"0\\\">\\n                <div class=\\\"swf-day-head\\\">\\n                    <span class=\\\"swf-day-name\\\"><?php echo esc_html($d['day']); ?></span>\\n                    <span class=\\\"swf-day-date\\\"><?php echo esc_html($d['date']); ?></span>\\n                </div>\\n                <div class=\\\"swf-icon\\\" aria-hidden=\\\"true\\\"><?php echo wp_kses_post($d['icon']); ?></div>\\n                <div class=\\\"swf-label\\\"><?php echo esc_html($d['label']); ?></div>\\n                <div class=\\\"swf-temps\\\">\\n                    <?php /* translators: %s: temperature in Celsius */ ?>\\n                    <span class=\\\"swf-temp-high\\\" title=\\\"<?php echo esc_attr(sprintf(esc_html__('High: %s\\u00b0C', 'swiss-weather-forecast'), esc_html($d['max']))); ?>\\\">\\n                        <?php echo esc_html(sprintf(esc_html__('%s\\u00b0C', 'swiss-weather-forecast'), (null !== $d['max'] ? round($d['max']) : ''))); ?>\\n                    </span>\\n                    <?php /* translators: %s: temperature in Celsius */ ?>\\n                    <span class=\\\"swf-temp-low\\\" title=\\\"<?php echo esc_attr(sprintf(esc_html__('Low: %s\\u00b0C', 'swiss-weather-forecast'), esc_html($d['min']))); ?>\\\">\\n                        <?php echo esc_html(sprintf(esc_html__('%s\\u00b0C', 'swiss-weather-forecast'), (null !== $d['min'] ? round($d['min']) : ''))); ?>\\n                    </span>\\n                </div>\\n                <div class=\\\"swf-pop\\\">\\n                    <?php /* translators: %d: chance of precipitation percentage */ ?>\\n                    <span><?php echo esc_html(sprintf(esc_html__('%d%% chance of precip.', 'swiss-weather-forecast'), (null !== $d['pop'] ? absint($d['pop']) : 0))); ?></span>\\n                </div>\\n            </div>\\n        <?php endforeach; ?>\\n    </div>\\n</div>\\n\",\n  \"swiss-weather-forecast/assets/css/style.css\": \"/* Swiss Weather Forecast styles */\\n.swf-forecast { \\n  border: 1px solid rgba(0,0,0,0.08);\\n  padding: 1rem; \\n  border-radius: 8px; \\n  background: var(--swf-bg, #fff);\\n}\\n.swf-title {\\n  margin: 0 0 0.75rem; \\n  font-size: 1.25rem; \\n}\\n.swf-grid { \\n  display: grid; \\n  grid-template-columns: repeat(5, 1fr); \\n  gap: 0.75rem; \\n}\\n.swf-day { \\n  background: rgba(0,0,0,0.02); \\n  border-radius: 6px; \\n  padding: 0.75rem; \\n  display: flex; \\n  flex-direction: column; \\n  align-items: center; \\n  text-align: center; \\n}\\n.swf-day-head { \\n  display: flex; \\n  gap: 0.35rem; \\n  font-weight: 600; \\n  margin-bottom: 0.35rem; \\n}\\n.swf-day-name { opacity: 0.9; }\\n.swf-day-date { opacity: 0.7; }\\n.swf-icon { \\n  color: #f39c12; \\n  margin: 0.25rem 0; \\n}\\n.swf-ico { width: 42px; height: 42px; }\\n.swf-label { font-size: 0.9rem; opacity: 0.9; margin: 0.25rem 0; }\\n.swf-temps { display: flex; gap: 0.5rem; font-weight: 600; }\\n.swf-temp-high { color: #e74c3c; }\\n.swf-temp-low { color: #3498db; }\\n.swf-pop { font-size: 0.85rem; opacity: 0.8; margin-top: 0.25rem; }\\n\\n/* Responsive */\\n@media (max-width: 800px) {\\n  .swf-grid { grid-template-columns: repeat(3, 1fr); }\\n}\\n@media (max-width: 540px) {\\n  .swf-grid { grid-template-columns: repeat(2, 1fr); }\\n}\\n@media (max-width: 360px) {\\n  .swf-grid { grid-template-columns: 1fr; }\\n}\\n\\n/* Error */\\n.swf-error { background: rgba(231, 76, 60, 0.06); border-color: rgba(231,76,60,0.25); }\\n.swf-error p { margin: 0; color: #c0392b; }\\n\",\n  \"swiss-weather-forecast/uninstall.php\": \"<?php\\nif (!defined('WP_UNINSTALL_PLUGIN')) {\\n    exit;\\n}\\n\\n// Clean up all plugin data\\ndelete_transient('swf_forecast_data');\\n\",\n  \"swiss-weather-forecast/languages/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n// Silence is golden.\\n\",\n  \"swiss-weather-forecast/readme.txt\": \"=== Swiss Weather Forecast ===\\nContributors: makeplugin\\nTags: weather, forecast, zurich, switzerland, climate, widget, homepage\\nRequires at least: 5.2\\nTested up to: 6.8\\nStable tag: 1.0.0\\nLicense: GPLv2 or later\\nRequires PHP: 7.4\\n\\nShows a 5\\u2011day Zurich weather forecast on the homepage.\\n\\n== Description ==\\nSwiss Weather Forecast is a lightweight plugin that displays a clean, responsive 5\\u2011day weather forecast for Zurich, Switzerland (English). It automatically appears in the main content area of your homepage, showing per\\u2011day: high/low temperatures (\\u00b0C), a weather icon, a short condition label, and chance of precipitation. Data is fetched from Open\\u2011Meteo and cached to keep your site fast. If data is temporarily unavailable, a friendly message is shown.\\n\\n== Installation ==\\n1. Upload the `swiss-weather-forecast` folder to the `/wp-content/plugins/` directory.\\n2. Activate the plugin through the 'Plugins' menu in WordPress.\\n3. Visit your homepage to see the forecast automatically appended to the main content.\\n\\n== Frequently Asked Questions ==\\n= Do I need an API key? =\\nNo. The plugin uses Open-Meteo, which does not require an API key.\\n\\n= Can I change the city/location? =\\nThis version is fixed to Zurich to keep things simple and fast.\\n\\n== Changelog ==\\n= 1.0.0 =\\n* Initial release.\\n\\n== Upgrade Notice ==\\n= 1.0.0 =\\nInitial release.\\n\"\n}\n```"
    }
  ]
}