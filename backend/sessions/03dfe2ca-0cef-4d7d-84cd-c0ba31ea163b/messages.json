{
  "messages": [
    {
      "role": "consultant",
      "content": "Hi, I am Plugin Pal - your WordPress plugin assistant!\n To begin, please describe the plugin you want to create.",
      "requirements": {},
      "requirements_finalized": false
    },
    {
      "role": "user",
      "content": "Hello can you perhaps build wallet plugin for me? How would it look and what it would do?"
    },
    {
      "role": "consultant",
      "content": "Great idea! Here\u2019s a simple plan: users get a balance, can add funds, see their history, and pay on your site with the wallet; you can adjust balances and choose extras like transfers or withdrawals. To tailor it: 1) Is this for a shop, memberships, or something else? 2) How should people add money (through your current checkout or only manual credits by you)? 3) Do you want user-to-user transfers? 4) Should users be able to request withdrawals? 5) Any special branding name you prefer for the wallet?",
      "requirements_finalized": false,
      "requirements": {
        "name": "Simple Site Wallet",
        "description": "User wallet for balance, top-ups, and payments",
        "details": "Create a simple wallet for logged-in users with a clear balance display, an Add Funds screen, and a Transaction History. Users can pay on the site using their wallet balance (if the site sells products or services), and the site owner can credit or deduct funds from any user. Optional switches: allow user-to-user transfers, allow withdrawal requests to a chosen payout method, and auto-credit refunds to the wallet. Include basic limits (min/max top-up), simple email alerts for top-ups and payments, and a clean, mobile-friendly interface with the site\u2019s branding. The plugin should support one site currency defined by the site and provide a basic admin report of total balances and recent activity."
      }
    },
    {
      "role": "user",
      "content": "Oh no not real money involvement"
    },
    {
      "role": "consultant",
      "content": "Got it\u2014points only, no real money. To tailor this: 1) Which actions should earn points, and are there daily caps? 2) What can points be spent on (perks, access, discounts, badges)? 3) Should new users start with a default balance? 4) Do you want users to transfer points to each other? If you share these, I\u2019ll finalize and we\u2019ll start building.",
      "requirements_finalized": false,
      "requirements": {
        "name": "Site Points Wallet",
        "description": "Virtual points wallet (no real money)",
        "details": "Build a points-only wallet for logged-in users. Each user sees their points balance and a simple activity history. The site owner can grant or deduct points and view a basic report of total points and recent actions. Users can earn points from defined actions (e.g., signup, posting, commenting, completing tasks) and spend points on site-defined rewards (e.g., perks, access, discounts, badges). Include basic limits (daily earn/spend caps), optional user-to-user point transfers, and simple email/onsite alerts for key events. Mobile-friendly UI using the site\u2019s branding. One points name/label (e.g., Points, Stars, Kudos) set by the site owner. No payments, deposits, or withdrawals with real money."
      }
    },
    {
      "role": "user",
      "content": "Perhaps just a count clicker that has 4 quadrants and stats below to show count of clicks in each quadrant as well as diff color for each. YOur theme choices"
    },
    {
      "role": "consultant",
      "content": "Great\u2014love the 4-color clicker idea. Quick choices: should the counts be shared across all visitors (one global tally) or separate per visitor? And do you want the ability to rename the quadrants and reset counts from an admin screen? Once you confirm, I\u2019ll lock this in and start the build.",
      "requirements_finalized": false,
      "requirements": {
        "name": "Four Quadrant Clicker",
        "description": "4-color click counter with live stats",
        "details": "Create a simple on-page clicker split into 4 equal quadrants, each with a distinct color and default label (A, B, C, D). When a visitor clicks a quadrant, that quadrant\u2019s count increases instantly and a stats area below shows the live counts per quadrant, total clicks, and each quadrant\u2019s percentage share, color-matched. Counts should persist and be stored as site-wide totals. Include an admin screen to rename quadrants, change colors, and reset individual or all counts. Add basic protection against rapid double-clicks. The component should be easily placed on a page, responsive, and keyboard accessible. Provide two display styles: full (grid + stats) and compact (smaller grid with concise stats)."
      }
    },
    {
      "role": "user",
      "content": "No need to have names. Its just a fun poppy button quadrants thing. And global count yass"
    },
    {
      "role": "consultant",
      "content": "Perfect\u2014no names, one shared global tally, and a bright, poppy look. I\u2019ve locked this in; please sit tight while we generate your plugin now.",
      "requirements_finalized": true,
      "requirements": {
        "name": "Four Quadrant Clicker",
        "description": "4-color global click counter with live stats",
        "details": "Build a fun, poppy 4-quadrant clicker (equal squares) with distinct vibrant colors. A click on any quadrant increases that quadrant\u2019s global count instantly. Below the grid, show live stats: each quadrant\u2019s count, total clicks, and each quadrant\u2019s percentage, color-matched. Counts persist globally across visitors and sessions. No names/labels needed\u2014just color-coded quadrants. Include a light debounce to avoid accidental double-clicks, smooth micro-animations on click, and a clean, responsive layout that works well on mobile and desktop. Accessible via mouse, touch, and keyboard. The component can be added to any page and uses a tasteful, modern theme palette chosen by us. No per-user tracking, no money, and no admin settings."
      }
    },
    {
      "role": "developer",
      "content": "I've created your plugin, packaged as a zip, ready to download and install!. Here are some instructions on how to get started with it:\nIn your WordPress dashboard, go to Plugins > Add New > Upload Plugin, upload the ZIP we provided, then Install and Activate it. To display the clicker, edit any page or post and add the shortcode [four_quadrant_clicker] (you can paste it into the content or use the Shortcode block). Update/Publish the page and view it to start clicking and see the live stats.",
      "zip_id": 0,
      "raw_response": "## Folder Structure\n```\nfour-quadrant-clicker/\n\u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u2514\u2500\u2500 style.css\n\u2502   \u2514\u2500\u2500 js/\n\u2502       \u2514\u2500\u2500 main.js\n\u251c\u2500\u2500 includes/\n\u2502   \u2514\u2500\u2500 class-four-quadrant-clicker.php\n\u251c\u2500\u2500 languages/\n\u2502   \u2514\u2500\u2500 four-quadrant-clicker.pot\n\u251c\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 render.php\n\u251c\u2500\u2500 four-quadrant-clicker.php\n\u251c\u2500\u2500 readme.txt\n\u2514\u2500\u2500 uninstall.php\n```\n\n## Plugin Files\n```json\n{\n  \"four-quadrant-clicker/four-quadrant-clicker.php\": \"<?php\\n/**\\n * Plugin Name: Four Quadrant Clicker\\n * Description: 4-color global click counter with live stats\\n * Version: 1.0.0\\n * Author: makeplugin\\n * Text Domain: four-quadrant-clicker\\n * Requires PHP: 7.4\\n * License: GPLv2 or later\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\n// Autoload or manual include\\nrequire_once plugin_dir_path(__FILE__) . 'includes/class-four-quadrant-clicker.php';\\n\\n/**\\n * Bootstrap the plugin.\\n */\\nfunction four_quadrant_clicker_bootstrap() {\\n    $instance = \\\\Four_Quadrant_Clicker::get_instance();\\n    $instance->init();\\n}\\nadd_action('plugins_loaded', 'four_quadrant_clicker_bootstrap');\\n\",\n  \"four-quadrant-clicker/includes/class-four-quadrant-clicker.php\": \"<?php\\n/**\\n * Main plugin class for Four Quadrant Clicker\\n *\\n * @package Four_Quadrant_Clicker\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nif (!class_exists('Four_Quadrant_Clicker')) {\\n    class Four_Quadrant_Clicker {\\n        /**\\n         * Singleton instance\\n         *\\n         * @var Four_Quadrant_Clicker|null\\n         */\\n        private static $instance = null;\\n\\n        /**\\n         * Option name for storing counts\\n         *\\n         * @var string\\n         */\\n        private $option_name = 'fqc_counts';\\n\\n        /**\\n         * Colors palette\\n         *\\n         * @var array\\n         */\\n        private $palette = array(\\n            // Keys reference logical quadrants; values are hex colors.\\n            'q1' => '#ff4d4f', // Vibrant Red\\n            'q2' => '#2f54eb', // Royal Blue\\n            'q3' => '#36cfc9', // Teal/Aqua\\n            'q4' => '#fadb14', // Gold Yellow\\n        );\\n\\n        /**\\n         * Get singleton instance.\\n         *\\n         * @return Four_Quadrant_Clicker\\n         */\\n        public static function get_instance() {\\n            if (null === self::$instance) {\\n                self::$instance = new self();\\n            }\\n            return self::$instance;\\n        }\\n\\n        /**\\n         * Initialize hooks.\\n         */\\n        public function init() {\\n            // Ensure counts option exists.\\n            $this->ensure_counts_exist();\\n\\n            // Register shortcode.\\n            add_shortcode('four_quadrant_clicker', array($this, 'render_shortcode'));\\n\\n            // Register assets.\\n            add_action('wp_enqueue_scripts', array($this, 'register_assets'));\\n\\n            // AJAX endpoints for both logged-in and guests.\\n            add_action('wp_ajax_fqc_click', array($this, 'handle_click'));\\n            add_action('wp_ajax_nopriv_fqc_click', array($this, 'handle_click'));\\n        }\\n\\n        /**\\n         * Ensure the counts option exists with initial zero values.\\n         */\\n        private function ensure_counts_exist() {\\n            $counts = get_option($this->option_name);\\n            if (!is_array($counts)) {\\n                $counts = array(\\n                    'q1' => 0,\\n                    'q2' => 0,\\n                    'q3' => 0,\\n                    'q4' => 0,\\n                );\\n                add_option($this->option_name, $counts, '', true);\\n            } else {\\n                // Normalize keys if needed.\\n                $defaults = array('q1' => 0, 'q2' => 0, 'q3' => 0, 'q4' => 0);\\n                $counts = wp_parse_args($counts, $defaults);\\n                update_option($this->option_name, $counts, true);\\n            }\\n        }\\n\\n        /**\\n         * Register styles and scripts (enqueued on demand in shortcode).\\n         */\\n        public function register_assets() {\\n            $ver = '1.0.0';\\n            $base = plugin_dir_url(dirname(__FILE__));\\n\\n            wp_register_style(\\n                'four-quadrant-clicker-style',\\n                $base . 'assets/css/style.css',\\n                array(),\\n                $ver\\n            );\\n\\n            wp_register_script(\\n                'four-quadrant-clicker-script',\\n                $base . 'assets/js/main.js',\\n                array('wp-i18n'),\\n                $ver,\\n                true\\n            );\\n        }\\n\\n        /**\\n         * Shortcode renderer.\\n         *\\n         * @return string\\n         */\\n        public function render_shortcode() {\\n            // Enqueue assets only when shortcode is used.\\n            wp_enqueue_style('four-quadrant-clicker-style');\\n            wp_enqueue_script('four-quadrant-clicker-script');\\n\\n            $counts = get_option($this->option_name);\\n            if (!is_array($counts)) {\\n                $counts = array('q1' => 0, 'q2' => 0, 'q3' => 0, 'q4' => 0);\\n            }\\n\\n            // Localize script with dynamic data.\\n            $localized = array(\\n                'ajaxUrl' => admin_url('admin-ajax.php'),\\n                'nonce'   => wp_create_nonce('fqc_nonce'),\\n                'counts'  => array(\\n                    'q1' => (int) $counts['q1'],\\n                    'q2' => (int) $counts['q2'],\\n                    'q3' => (int) $counts['q3'],\\n                    'q4' => (int) $counts['q4'],\\n                ),\\n                'palette' => $this->palette,\\n                'i18n'    => array(\\n                    /* translators: %s: quadrant number (1-4) */\\n                    'quadrantLabel' => esc_html__('Quadrant %s', 'four-quadrant-clicker'),\\n                    'totalLabel'    => esc_html__('Total clicks', 'four-quadrant-clicker'),\\n                    'countLabel'    => esc_html__('Count', 'four-quadrant-clicker'),\\n                    'percentLabel'  => esc_html__('Percent', 'four-quadrant-clicker'),\\n                ),\\n                'debounceMs' => 250,\\n            );\\n            wp_localize_script('four-quadrant-clicker-script', 'FQC_DATA', $localized);\\n\\n            // Capture template output safely.\\n            ob_start();\\n            $palette = $this->palette; // local var for template\\n            $safe_counts = array(\\n                'q1' => isset($counts['q1']) ? (int) $counts['q1'] : 0,\\n                'q2' => isset($counts['q2']) ? (int) $counts['q2'] : 0,\\n                'q3' => isset($counts['q3']) ? (int) $counts['q3'] : 0,\\n                'q4' => isset($counts['q4']) ? (int) $counts['q4'] : 0,\\n            );\\n            $template_path = plugin_dir_path(dirname(__FILE__)) . 'templates/render.php';\\n            if (file_exists($template_path)) {\\n                // Provide variables to template scope\\n                $fqc_counts = $safe_counts; // phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.VariableConstantNameFound\\n                $fqc_palette = $palette;    // phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.VariableConstantNameFound\\n                include $template_path;\\n            }\\n            $html = ob_get_clean();\\n\\n            return wp_kses_post($html);\\n        }\\n\\n        /**\\n         * Handle a click increment via AJAX.\\n         */\\n        public function handle_click() {\\n            // Validate nonce\\n            $nonce = isset($_POST['nonce']) ? sanitize_text_field(wp_unslash($_POST['nonce'])) : '';\\n            if (!wp_verify_nonce($nonce, 'fqc_nonce')) {\\n                wp_send_json_error(array(\\n                    'message' => esc_html__('Security check failed.', 'four-quadrant-clicker'),\\n                ), 403);\\n            }\\n\\n            // Sanitize quadrant key\\n            $quadrant = isset($_POST['quadrant']) ? sanitize_text_field(wp_unslash($_POST['quadrant'])) : '';\\n            $allowed = array('q1', 'q2', 'q3', 'q4');\\n            if (!in_array($quadrant, $allowed, true)) {\\n                wp_send_json_error(array(\\n                    'message' => esc_html__('Invalid quadrant.', 'four-quadrant-clicker'),\\n                ), 400);\\n            }\\n\\n            // Get and update counts atomically as possible\\n            $counts = get_option($this->option_name);\\n            if (!is_array($counts)) {\\n                $counts = array('q1' => 0, 'q2' => 0, 'q3' => 0, 'q4' => 0);\\n            }\\n\\n            $counts[$quadrant] = isset($counts[$quadrant]) ? (int) $counts[$quadrant] + 1 : 1;\\n            update_option($this->option_name, $counts, true);\\n\\n            // Prepare response with totals and percentages\\n            $total = (int) $counts['q1'] + (int) $counts['q2'] + (int) $counts['q3'] + (int) $counts['q4'];\\n            $perc = array(\\n                'q1' => $total > 0 ? round(((int) $counts['q1'] / $total) * 100, 1) : 0,\\n                'q2' => $total > 0 ? round(((int) $counts['q2'] / $total) * 100, 1) : 0,\\n                'q3' => $total > 0 ? round(((int) $counts['q3'] / $total) * 100, 1) : 0,\\n                'q4' => $total > 0 ? round(((int) $counts['q4'] / $total) * 100, 1) : 0,\\n            );\\n\\n            wp_send_json_success(array(\\n                'counts' => array(\\n                    'q1' => (int) $counts['q1'],\\n                    'q2' => (int) $counts['q2'],\\n                    'q3' => (int) $counts['q3'],\\n                    'q4' => (int) $counts['q4'],\\n                ),\\n                'total' => (int) $total,\\n                'percent' => $perc,\\n            ));\\n        }\\n    }\\n}\\n\",\n  \"four-quadrant-clicker/templates/render.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n// Expected: $fqc_counts (int array), $fqc_palette (hex color array)\\n$total = (int) $fqc_counts['q1'] + (int) $fqc_counts['q2'] + (int) $fqc_counts['q3'] + (int) $fqc_counts['q4'];\\n$perc = array(\\n    'q1' => $total > 0 ? round(((int) $fqc_counts['q1'] / $total) * 100, 1) : 0,\\n    'q2' => $total > 0 ? round(((int) $fqc_counts['q2'] / $total) * 100, 1) : 0,\\n    'q3' => $total > 0 ? round(((int) $fqc_counts['q3'] / $total) * 100, 1) : 0,\\n    'q4' => $total > 0 ? round(((int) $fqc_counts['q4'] / $total) * 100, 1) : 0,\\n);\\n?>\\n<div class=\\\"fqc\\\" data-fqc>\\n    <div class=\\\"fqc-grid\\\" role=\\\"group\\\" aria-label=\\\"<?php echo esc_attr(esc_html__('Four quadrant clicker', 'four-quadrant-clicker')); ?>\\\">\\n        <button class=\\\"fqc-cell fqc-q1\\\" data-quadrant=\\\"q1\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q1']); ?>\\\" aria-label=\\\"<?php /* translators: %s: quadrant number (1-4) */ printf(esc_attr__('Quadrant %s', 'four-quadrant-clicker'), '1'); ?>\\\"></button>\\n        <button class=\\\"fqc-cell fqc-q2\\\" data-quadrant=\\\"q2\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q2']); ?>\\\" aria-label=\\\"<?php /* translators: %s: quadrant number (1-4) */ printf(esc_attr__('Quadrant %s', 'four-quadrant-clicker'), '2'); ?>\\\"></button>\\n        <button class=\\\"fqc-cell fqc-q3\\\" data-quadrant=\\\"q3\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q3']); ?>\\\" aria-label=\\\"<?php /* translators: %s: quadrant number (1-4) */ printf(esc_attr__('Quadrant %s', 'four-quadrant-clicker'), '3'); ?>\\\"></button>\\n        <button class=\\\"fqc-cell fqc-q4\\\" data-quadrant=\\\"q4\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q4']); ?>\\\" aria-label=\\\"<?php /* translators: %s: quadrant number (1-4) */ printf(esc_attr__('Quadrant %s', 'four-quadrant-clicker'), '4'); ?>\\\"></button>\\n    </div>\\n    <div class=\\\"fqc-stats\\\" aria-live=\\\"polite\\\">\\n        <div class=\\\"fqc-stat\\\">\\n            <span class=\\\"fqc-dot\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q1']); ?>\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"screen-reader-text\\\"><?php echo esc_html__('Quadrant 1', 'four-quadrant-clicker'); ?>:</span>\\n            <span class=\\\"fqc-count\\\" data-count=\\\"q1\\\"><?php echo esc_html((string) (int) $fqc_counts['q1']); ?></span>\\n            <span class=\\\"fqc-percent\\\" data-percent=\\\"q1\\\"><?php echo esc_html((string) $perc['q1']); ?>%</span>\\n        </div>\\n        <div class=\\\"fqc-stat\\\">\\n            <span class=\\\"fqc-dot\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q2']); ?>\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"screen-reader-text\\\"><?php echo esc_html__('Quadrant 2', 'four-quadrant-clicker'); ?>:</span>\\n            <span class=\\\"fqc-count\\\" data-count=\\\"q2\\\"><?php echo esc_html((string) (int) $fqc_counts['q2']); ?></span>\\n            <span class=\\\"fqc-percent\\\" data-percent=\\\"q2\\\"><?php echo esc_html((string) $perc['q2']); ?>%</span>\\n        </div>\\n        <div class=\\\"fqc-stat\\\">\\n            <span class=\\\"fqc-dot\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q3']); ?>\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"screen-reader-text\\\"><?php echo esc_html__('Quadrant 3', 'four-quadrant-clicker'); ?>:</span>\\n            <span class=\\\"fqc-count\\\" data-count=\\\"q3\\\"><?php echo esc_html((string) (int) $fqc_counts['q3']); ?></span>\\n            <span class=\\\"fqc-percent\\\" data-percent=\\\"q3\\\"><?php echo esc_html((string) $perc['q3']); ?>%</span>\\n        </div>\\n        <div class=\\\"fqc-stat\\\">\\n            <span class=\\\"fqc-dot\\\" style=\\\"--fqc-color: <?php echo esc_attr($fqc_palette['q4']); ?>\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"screen-reader-text\\\"><?php echo esc_html__('Quadrant 4', 'four-quadrant-clicker'); ?>:</span>\\n            <span class=\\\"fqc-count\\\" data-count=\\\"q4\\\"><?php echo esc_html((string) (int) $fqc_counts['q4']); ?></span>\\n            <span class=\\\"fqc-percent\\\" data-percent=\\\"q4\\\"><?php echo esc_html((string) $perc['q4']); ?>%</span>\\n        </div>\\n        <div class=\\\"fqc-total\\\">\\n            <span class=\\\"fqc-total-label screen-reader-text\\\"><?php echo esc_html__('Total clicks', 'four-quadrant-clicker'); ?>:</span>\\n            <span class=\\\"fqc-total-value\\\" data-total><?php echo esc_html((string) $total); ?></span>\\n        </div>\\n    </div>\\n</div>\\n\",\n  \"four-quadrant-clicker/assets/css/style.css\": \"/* Four Quadrant Clicker Styles */\\n.fqc { max-width: 640px; margin: 1rem auto; padding: 0 0.5rem; font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif; color: #1f2937; }\\n\\n.fqc-grid { display: grid; grid-template-columns: repeat(2, 1fr); grid-template-rows: repeat(2, 1fr); gap: 8px; width: 100%; aspect-ratio: 1 / 1; }\\n\\n.fqc-cell { border: none; padding: 0; margin: 0; cursor: pointer; background: var(--fqc-color); border-radius: 10px; outline-offset: 2px; transition: transform 120ms ease, box-shadow 120ms ease, filter 120ms ease; box-shadow: 0 1px 2px rgba(0,0,0,0.08), 0 4px 14px rgba(0,0,0,0.08); }\\n.fqc-cell:focus-visible { outline: 3px solid rgba(0,0,0,0.35); }\\n.fqc-cell:hover { filter: brightness(1.05); }\\n.fqc-cell:active, .fqc-cell.fqc-pressed { transform: scale(0.98); box-shadow: 0 1px 1px rgba(0,0,0,0.10), 0 2px 8px rgba(0,0,0,0.10); }\\n\\n.fqc-stats { display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 8px 12px; margin-top: 12px; align-items: center; font-weight: 600; }\\n.fqc-stat { display: flex; align-items: center; gap: 8px; background: #ffffff; border-radius: 10px; padding: 8px 10px; box-shadow: 0 1px 2px rgba(0,0,0,0.06); }\\n.fqc-dot { width: 14px; height: 14px; border-radius: 50%; background: var(--fqc-color); display: inline-block; }\\n.fqc-count { font-variant-numeric: tabular-nums; }\\n.fqc-percent { margin-left: auto; opacity: 0.8; font-variant-numeric: tabular-nums; }\\n.fqc-total { grid-column: 1 / -1; text-align: center; margin-top: 2px; color: #111827; font-weight: 700; font-size: 1.1rem; }\\n\\n/* Responsive tweaks */\\n@media (max-width: 480px) {\\n  .fqc-stats { grid-template-columns: 1fr; }\\n}\\n\\n/* Visually hidden for accessibility */\\n.screen-reader-text { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0; }\\n\",\n  \"four-quadrant-clicker/assets/js/main.js\": \"(function(){\\n  'use strict';\\n\\n  function debounce(fn, wait){\\n    var t; return function(){\\n      var ctx=this, args=arguments; clearTimeout(t);\\n      t=setTimeout(function(){ fn.apply(ctx,args); }, wait);\\n    };\\n  }\\n\\n  function $(sel, ctx){ return (ctx||document).querySelector(sel); }\\n  function $all(sel, ctx){ return (ctx||document).querySelectorAll(sel); }\\n\\n  function updateStats(root, data){\\n    if(!root || !data) return;\\n    var counts = data.counts || {};\\n    var total = typeof data.total === 'number' ? data.total : (counts.q1+counts.q2+counts.q3+counts.q4);\\n    var percent = data.percent || {\\n      q1: total>0? +( (counts.q1/total)*100 ).toFixed(1):0,\\n      q2: total>0? +( (counts.q2/total)*100 ).toFixed(1):0,\\n      q3: total>0? +( (counts.q3/total)*100 ).toFixed(1):0,\\n      q4: total>0? +( (counts.q4/total)*100 ).toFixed(1):0\\n    };\\n\\n    ['q1','q2','q3','q4'].forEach(function(k){\\n      var c = root.querySelector('[data-count=\\\"'+k+'\\\"]');\\n      var p = root.querySelector('[data-percent=\\\"'+k+'\\\"]');\\n      if(c){ c.textContent = String(counts[k]||0); }\\n      if(p){ p.textContent = String(percent[k]||0) + '%'; }\\n    });\\n    var totalEl = root.querySelector('[data-total]');\\n    if(totalEl){ totalEl.textContent = String(total||0); }\\n  }\\n\\n  function bind(root){\\n    if(!root) return;\\n    var grid = root.querySelector('.fqc-grid');\\n    var cells = $all('.fqc-cell', root);\\n    var busy = false;\\n\\n    function sendClick(quadrant){\\n      if(busy) return; // extra protection\\n      busy = true;\\n      var form = new FormData();\\n      form.append('action', 'fqc_click');\\n      form.append('nonce', (window.FQC_DATA && FQC_DATA.nonce) || '');\\n      form.append('quadrant', quadrant);\\n\\n      fetch((window.FQC_DATA && FQC_DATA.ajaxUrl) || '', {\\n        method: 'POST',\\n        credentials: 'same-origin',\\n        body: form\\n      }).then(function(res){ return res.json(); })\\n      .then(function(json){\\n        if(json && json.success){\\n          updateStats(root, json.data);\\n        }\\n      }).catch(function(){ /* swallow errors silently */ })\\n      .finally(function(){ busy = false; });\\n    }\\n\\n    var debouncedSend = debounce(sendClick, (window.FQC_DATA && FQC_DATA.debounceMs) || 250);\\n\\n    cells.forEach(function(btn){\\n      btn.addEventListener('click', function(e){\\n        e.preventDefault();\\n        var q = btn.getAttribute('data-quadrant');\\n        btn.classList.add('fqc-pressed');\\n        setTimeout(function(){ btn.classList.remove('fqc-pressed'); }, 180);\\n        debouncedSend(q);\\n      });\\n      btn.addEventListener('keydown', function(e){\\n        if(e.key === 'Enter' || e.key === ' '){\\n          e.preventDefault();\\n          btn.click();\\n        }\\n      });\\n      // Touch ripple-like micro animation via quick class toggle handled in click\\n    });\\n\\n    // Initialize UI with localized counts\\n    if(window.FQC_DATA && FQC_DATA.counts){\\n      var c = FQC_DATA.counts; var t = (c.q1||0)+(c.q2||0)+(c.q3||0)+(c.q4||0);\\n      updateStats(root, { counts: c, total: t });\\n    }\\n  }\\n\\n  document.addEventListener('DOMContentLoaded', function(){\\n    var root = document.querySelector('[data-fqc]');\\n    if(root){ bind(root); }\\n  });\\n})();\\n\",\n  \"four-quadrant-clicker/uninstall.php\": \"<?php\\nif (!defined('WP_UNINSTALL_PLUGIN')) {\\n    exit;\\n}\\n\\n// Clean up all plugin data\\ndelete_option('fqc_counts');\\n\",\n  \"four-quadrant-clicker/readme.txt\": \"=== Four Quadrant Clicker ===\\nContributors: makeplugin\\nTags: clicker, counter, fun, interactive, game, colors, shortcode, stats\\nRequires at least: 5.2\\nTested up to: 6.8\\nStable tag: 1.0.0\\nLicense: GPLv2 or later\\nRequires PHP: 7.4\\n\\n4-color global click counter with live stats.\\n\\n== Description ==\\nBuild a fun, poppy 4-quadrant clicker (equal squares) with distinct vibrant colors. A click on any quadrant increases that quadrant\u2019s global count instantly. Below the grid, show live stats: each quadrant\u2019s count, total clicks, and each quadrant\u2019s percentage, color-matched. Counts persist globally across visitors and sessions. No names/labels needed\u2014just color-coded quadrants. Includes a light debounce to avoid accidental double-clicks, smooth micro-animations on click, and a clean, responsive layout that works well on mobile and desktop. Accessible via mouse, touch, and keyboard. Add it to any page via the shortcode: [four_quadrant_clicker]. No per-user tracking, no money, and no admin settings.\\n\\n== Installation ==\\n1. Upload the plugin folder to the /wp-content/plugins/ directory or install via the Plugins screen in WordPress.\\n2. Activate the plugin through the Plugins screen.\\n3. Add the shortcode [four_quadrant_clicker] to any page or post.\\n\\n== Frequently Asked Questions ==\\n= How do I display the clicker? =\\nUse the shortcode [four_quadrant_clicker] in any post or page.\\n\\n= Does it track users? =\\nNo. It stores only global counts with no personal data.\\n\\n== Changelog ==\\n= 1.0.0 =\\n* Initial release.\\n\\n== Upgrade Notice ==\\n= 1.0.0 =\\nInitial release.\\n\",\n  \"four-quadrant-clicker/languages/four-quadrant-clicker.pot\": \"msgid \\\"\\\"\\nmsgstr \\\"\\\"\\n\\\"Project-Id-Version: Four Quadrant Clicker 1.0.0\\\\n\\\"\\n\\\"Report-Msgid-Bugs-To: \\\\n\\\"\\n\\\"POT-Creation-Date: 2025-08-23 00:00+0000\\\\n\\\"\\n\\\"MIME-Version: 1.0\\\\n\\\"\\n\\\"Content-Type: text/plain; charset=UTF-8\\\\n\\\"\\n\\\"Content-Transfer-Encoding: 8bit\\\\n\\\"\\n\\\"X-Generator: makeplugin\\\\n\\\"\\n\\\"X-Domain: four-quadrant-clicker\\\\n\\\"\\n\\n#: includes/class-four-quadrant-clicker.php:79\\nmsgid \\\"Quadrant %s\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-four-quadrant-clicker.php:80\\nmsgid \\\"Total clicks\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-four-quadrant-clicker.php:81\\nmsgid \\\"Count\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-four-quadrant-clicker.php:82\\nmsgid \\\"Percent\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-four-quadrant-clicker.php:122\\nmsgid \\\"Security check failed.\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-four-quadrant-clicker.php:130\\nmsgid \\\"Invalid quadrant.\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/render.php:9\\nmsgid \\\"Four quadrant clicker\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/render.php:12\\nmsgid \\\"Quadrant 1\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/render.php:16\\nmsgid \\\"Quadrant 2\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/render.php:20\\nmsgid \\\"Quadrant 3\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/render.php:24\\nmsgid \\\"Quadrant 4\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/render.php:29\\nmsgid \\\"Total clicks\\\"\\nmsgstr \\\"\\\"\\n\"\n}\n```"
    }
  ]
}