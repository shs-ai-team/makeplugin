{
  "messages": [
    {
      "role": "consultant",
      "content": "Hi, I am Plugin Pal - your WordPress plugin assistant!\n To begin, please describe the plugin you want to create.",
      "requirements": {},
      "requirements_finalized": false
    },
    {
      "role": "user",
      "content": "I want a feedback form plugin. It should have 2 fields: Name and Message (limited to 150 words). The feedbacks can be given by anyone, and persist. below the form all the feedbacks anyone ever has submitted should be shown in a listview. Design it minimalisticlally and user friendly."
    },
    {
      "role": "consultant",
      "content": "Got it! We\u2019ll create a minimal public feedback form (Name + Message up to 150 words) that saves entries and shows all submissions below the form, newest first. I\u2019ll start the plugin generation now\u2014please sit tight.",
      "requirements_finalized": true,
      "requirements": {
        "name": "Simple Feedback Board",
        "description": "Public feedback form with a live list of all submissions.",
        "details": "Provide a minimal, user-friendly public feedback form with two fields: Name and Message. Both fields are required. Message is limited to 150 words with a live word counter and clear validation messages. Submissions are saved and persist. Below the form, display all feedback ever submitted in a clean list (newest first), showing the Name and Message. No login required; anyone can submit. Show a simple success notice after submission and handle errors gracefully. Include light, modern styling to keep the layout clean and readable. Offer a simple way for the site owner to place this form-and-list on a page."
      }
    },
    {
      "role": "developer",
      "content": "I've created your plugin, packaged as a zip, ready to download and install!. Here are some instructions on how to get started with it:\n'''\n# Instructions\nIn your WordPress dashboard, go to Plugins > Add New > Upload Plugin, upload the ZIP we provided, then Activate it. Next, edit or create any page and paste the shortcode [simple_feedback_board] where you want the form to appear, then Update/Publish the page. Visitors can submit their Name and Message there (limited to 150 words), and all submissions will automatically display below the form on the same page.\n'''",
      "zip_id": 0,
      "raw_response": "## Folder Structure\n```\nsimple-feedback-board/\n\u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u251c\u2500\u2500 index.php\n\u2502   \u2502   \u2514\u2500\u2500 style.css\n\u2502   \u2514\u2500\u2500 js/\n\u2502       \u251c\u2500\u2500 index.php\n\u2502       \u2514\u2500\u2500 script.js\n\u251c\u2500\u2500 includes/\n\u2502   \u251c\u2500\u2500 class-sfb.php\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 languages/\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 form-list.php\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 readme.txt\n\u251c\u2500\u2500 simple-feedback-board.php\n\u2514\u2500\u2500 uninstall.php\n```\n\n## Plugin Files\n```json\n{\n  \"simple-feedback-board/simple-feedback-board.php\": \"<?php\\n/**\\n * Plugin Name: Simple Feedback Board\\n * Description: Public feedback form with a live list of all submissions.\\n * Version: 1.0.0\\n * Author: makeplugin\\n * Text Domain: simple-feedback-board\\n * License: GPLv2 or later\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\n// Load text domain\\nadd_action('plugins_loaded', function () {\\n    load_plugin_textdomain('simple-feedback-board', false, dirname(plugin_basename(__FILE__)) . '/languages');\\n});\\n\\nrequire_once plugin_dir_path(__FILE__) . 'includes/class-sfb.php';\\n\\n// Initialize plugin\\nadd_action('init', function () {\\n    \\\\SFB_Plugin::get_instance();\\n});\\n\",\n  \"simple-feedback-board/includes/class-sfb.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nclass SFB_Plugin {\\n    /**\\n     * Singleton instance\\n     *\\n     * @var SFB_Plugin\\n     */\\n    private static $instance;\\n\\n    /**\\n     * Word limit for message\\n     *\\n     * @var int\\n     */\\n    private $word_limit = 150;\\n\\n    /**\\n     * Get instance\\n     *\\n     * @return SFB_Plugin\\n     */\\n    public static function get_instance() {\\n        if (null === self::$instance) {\\n            self::$instance = new self();\\n        }\\n        return self::$instance;\\n    }\\n\\n    /**\\n     * Constructor\\n     */\\n    private function __construct() {\\n        $this->register_hooks();\\n    }\\n\\n    /**\\n     * Register WordPress hooks\\n     */\\n    private function register_hooks() {\\n        add_action('init', array($this, 'register_post_type'));\\n        add_shortcode('simple_feedback_board', array($this, 'shortcode'));\\n    }\\n\\n    /**\\n     * Register custom post type to store feedback\\n     */\\n    public function register_post_type() {\\n        $labels = array(\\n            'name' => esc_html__('Feedback', 'simple-feedback-board'),\\n            'singular_name' => esc_html__('Feedback Item', 'simple-feedback-board')\\n        );\\n\\n        $args = array(\\n            'labels' => $labels,\\n            'public' => false,\\n            'show_ui' => false,\\n            'show_in_menu' => false,\\n            'supports' => array('title', 'editor'),\\n            'capability_type' => 'post',\\n            'rewrite' => false,\\n            'query_var' => false\\n        );\\n\\n        register_post_type('sfb_feedback', $args);\\n    }\\n\\n    /**\\n     * Handle form processing\\n     *\\n     * @param array $state\\n     * @return array\\n     */\\n    private function maybe_handle_submission($state) {\\n        if (!isset($_POST['sfb_action']) || 'submit_feedback' !== sanitize_text_field(wp_unslash($_POST['sfb_action'] ?? ''))) {\\n            return $state;\\n        }\\n\\n        // Verify nonce\\n        $nonce = isset($_POST['sfb_nonce']) ? sanitize_text_field(wp_unslash($_POST['sfb_nonce'])) : '';\\n        if (!wp_verify_nonce($nonce, 'sfb_submit')) {\\n            $state['errors'][] = esc_html__('Security check failed. Please try again.', 'simple-feedback-board');\\n            return $state;\\n        }\\n\\n        // Sanitize inputs\\n        $name_raw = isset($_POST['sfb_name']) ? wp_unslash($_POST['sfb_name']) : '';\\n        $message_raw = isset($_POST['sfb_message']) ? wp_unslash($_POST['sfb_message']) : '';\\n\\n        $name = sanitize_text_field($name_raw);\\n        // Allow plain text only; trim extra whitespace\\n        $message = trim(wp_strip_all_tags($message_raw));\\n\\n        // Validate\\n        if ('' === $name) {\\n            $state['errors'][] = esc_html__('Please enter your name.', 'simple-feedback-board');\\n        }\\n\\n        if ('' === $message) {\\n            $state['errors'][] = esc_html__('Please enter a message.', 'simple-feedback-board');\\n        }\\n\\n        $word_count = $this->count_words($message);\\n        if ($word_count > $this->word_limit) {\\n            /* translators: %1$d: current word count, %2$d: word limit */\\n            $state['errors'][] = sprintf(esc_html__('%1$d words entered. The message limit is %2$d words.', 'simple-feedback-board'), (int) $word_count, (int) $this->word_limit);\\n        }\\n\\n        // Preserve form values on error\\n        $state['values'] = array(\\n            'name' => $name,\\n            'message' => $message,\\n        );\\n\\n        if (!empty($state['errors'])) {\\n            return $state;\\n        }\\n\\n        // Insert feedback post\\n        $postarr = array(\\n            'post_type' => 'sfb_feedback',\\n            'post_title' => $name,\\n            'post_content' => $message,\\n            'post_status' => 'publish',\\n        );\\n\\n        $insert_id = wp_insert_post($postarr, true);\\n\\n        if (is_wp_error($insert_id)) {\\n            $state['errors'][] = esc_html__('An error occurred while saving your feedback. Please try again.', 'simple-feedback-board');\\n            return $state;\\n        }\\n\\n        // Redirect to avoid resubmission\\n        $redirect_url = add_query_arg(array('sfb_submitted' => 1), remove_query_arg(array('sfb_submitted')));\\n        wp_safe_redirect($redirect_url);\\n        exit;\\n    }\\n\\n    /**\\n     * Shortcode callback to render form and list\\n     *\\n     * @return string\\n     */\\n    public function shortcode() {\\n        // Enqueue assets\\n        $this->enqueue_assets();\\n\\n        $state = array(\\n            'errors' => array(),\\n            'values' => array(\\n                'name' => '',\\n                'message' => ''\\n            ),\\n            'success' => false,\\n        );\\n\\n        // Process submission if present\\n        $state = $this->maybe_handle_submission($state);\\n\\n        // Success notice\\n        if (isset($_GET['sfb_submitted']) && '1' === sanitize_text_field(wp_unslash($_GET['sfb_submitted']))) {\\n            $state['success'] = true;\\n        }\\n\\n        // Fetch all feedback items (newest first)\\n        $feedback_items = $this->get_feedback_items();\\n\\n        ob_start();\\n        $values = $state['values'];\\n        $errors = $state['errors'];\\n        $success = $state['success'];\\n        $word_limit = (int) $this->word_limit;\\n        $template = plugin_dir_path(dirname(__FILE__)) . 'templates/form-list.php';\\n        if (file_exists($template)) {\\n            include $template;\\n        }\\n        return ob_get_clean();\\n    }\\n\\n    /**\\n     * Enqueue styles and scripts\\n     */\\n    private function enqueue_assets() {\\n        $suffix = defined('SCRIPT_DEBUG') && SCRIPT_DEBUG ? '' : '';\\n        $ver = '1.0.0';\\n\\n        wp_enqueue_style(\\n            'sfb-style',\\n            plugin_dir_url(dirname(__FILE__)) . 'assets/css/style.css',\\n            array(),\\n            $ver\\n        );\\n\\n        wp_enqueue_script(\\n            'sfb-script',\\n            plugin_dir_url(dirname(__FILE__)) . 'assets/js/script.js',\\n            array('jquery'),\\n            $ver,\\n            true\\n        );\\n\\n        wp_localize_script('sfb-script', 'SFB', array(\\n            'wordLimit' => (int) $this->word_limit,\\n            'i18n' => array(\\n                /* translators: %d: maximum number of words allowed */\\n                'maxWords' => sprintf(esc_html__('Maximum %d words.', 'simple-feedback-board'), (int) $this->word_limit),\\n                /* translators: 1: current word count, 2: max words */\\n                'wordCount' => esc_html__('%1$d / %2$d words', 'simple-feedback-board'),\\n                'tooLong' => esc_html__('Your message is too long.', 'simple-feedback-board')\\n            )\\n        ));\\n    }\\n\\n    /**\\n     * Get all feedback posts\\n     *\\n     * @return WP_Post[]\\n     */\\n    private function get_feedback_items() {\\n        $args = array(\\n            'post_type' => 'sfb_feedback',\\n            'posts_per_page' => -1,\\n            'post_status' => 'publish',\\n            'orderby' => 'date',\\n            'order' => 'DESC',\\n            'no_found_rows' => true,\\n            'ignore_sticky_posts' => true,\\n        );\\n        $q = new WP_Query($args);\\n        return $q->posts;\\n    }\\n\\n    /**\\n     * Count words in a string\\n     *\\n     * @param string $text\\n     * @return int\\n     */\\n    private function count_words($text) {\\n        $text = trim((string) $text);\\n        if ($text === '') {\\n            return 0;\\n        }\\n        // Normalize whitespace and count words\\n        $text = preg_replace('/\\\\s+/u', ' ', $text);\\n        $words = explode(' ', $text);\\n        return count($words);\\n    }\\n}\\n\",\n  \"simple-feedback-board/templates/form-list.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n?>\\n<div class=\\\"sfb-wrap\\\">\\n    <?php if (!empty($success)) : ?>\\n        <div class=\\\"sfb-notice sfb-success\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">\\n            <?php echo esc_html__('Thank you! Your feedback has been submitted.', 'simple-feedback-board'); ?>\\n        </div>\\n    <?php endif; ?>\\n\\n    <?php if (!empty($errors)) : ?>\\n        <div class=\\\"sfb-notice sfb-error\\\" role=\\\"alert\\\">\\n            <ul>\\n                <?php foreach ($errors as $err) : ?>\\n                    <li><?php echo esc_html($err); ?></li>\\n                <?php endforeach; ?>\\n            </ul>\\n        </div>\\n    <?php endif; ?>\\n\\n    <form class=\\\"sfb-form\\\" method=\\\"post\\\" action=\\\"<?php echo esc_url(\\\\wp_unslash($_SERVER['REQUEST_URI'] ?? '')); ?>\\\" novalidate>\\n        <div class=\\\"sfb-field\\\">\\n            <label for=\\\"sfb_name\\\"><?php echo esc_html__('Name', 'simple-feedback-board'); ?> <span class=\\\"sfb-required\\\" aria-hidden=\\\"true\\\">*</span></label>\\n            <input type=\\\"text\\\" id=\\\"sfb_name\\\" name=\\\"sfb_name\\\" value=\\\"<?php echo isset($values['name']) ? esc_attr($values['name']) : ''; ?>\\\" required maxlength=\\\"200\\\" />\\n        </div>\\n        <div class=\\\"sfb-field\\\">\\n            <label for=\\\"sfb_message\\\"><?php echo esc_html__('Message', 'simple-feedback-board'); ?> <span class=\\\"sfb-required\\\" aria-hidden=\\\"true\\\">*</span></label>\\n            <textarea id=\\\"sfb_message\\\" name=\\\"sfb_message\\\" rows=\\\"5\\\" required aria-describedby=\\\"sfb_counter\\\"><?php echo isset($values['message']) ? esc_html($values['message']) : ''; ?></textarea>\\n            <div id=\\\"sfb_counter\\\" class=\\\"sfb-counter\\\" aria-live=\\\"polite\\\"></div>\\n            <div class=\\\"sfb-help\\\"><?php /* translators: %d: word limit */ printf(esc_html__('Up to %d words.', 'simple-feedback-board'), (int) $word_limit); ?></div>\\n        </div>\\n        <div class=\\\"sfb-actions\\\">\\n            <?php wp_nonce_field('sfb_submit', 'sfb_nonce'); ?>\\n            <input type=\\\"hidden\\\" name=\\\"sfb_action\\\" value=\\\"submit_feedback\\\" />\\n            <button type=\\\"submit\\\" class=\\\"sfb-button\\\"><?php echo esc_html__('Send Feedback', 'simple-feedback-board'); ?></button>\\n        </div>\\n    </form>\\n\\n    <div class=\\\"sfb-list\\\">\\n        <h3 class=\\\"sfb-list-title\\\"><?php echo esc_html__('All Feedback', 'simple-feedback-board'); ?></h3>\\n        <?php if (!empty($feedback_items)) : ?>\\n            <ul class=\\\"sfb-items\\\">\\n                <?php foreach ($feedback_items as $item) : ?>\\n                    <?php\\n                    $item_name = get_the_title($item);\\n                    $item_message_raw = $item->post_content;\\n                    $item_message = wpautop(esc_html($item_message_raw));\\n                    ?>\\n                    <li class=\\\"sfb-item\\\">\\n                        <div class=\\\"sfb-item-name\\\"><?php echo esc_html($item_name); ?></div>\\n                        <div class=\\\"sfb-item-message\\\"><?php echo wp_kses_post($item_message); ?></div>\\n                    </li>\\n                <?php endforeach; ?>\\n            </ul>\\n        <?php else : ?>\\n            <p class=\\\"sfb-empty\\\"><?php echo esc_html__('No feedback has been submitted yet.', 'simple-feedback-board'); ?></p>\\n        <?php endif; ?>\\n    </div>\\n</div>\\n\",\n  \"simple-feedback-board/assets/css/style.css\": \"/* Simple Feedback Board styles */\\n.sfb-wrap {\\\\n  max-width: 720px;\\\\n  margin: 1.5rem auto;\\\\n  padding: 1rem;\\\\n  background: #fff;\\\\n  border: 1px solid #e5e7eb;\\\\n  border-radius: 8px;\\\\n  box-shadow: 0 1px 2px rgba(0,0,0,0.04);\\\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\\\n}\\n.sfb-field {\\\\n  margin-bottom: 1rem;\\\\n}\\n.sfb-field label {\\\\n  display: block;\\\\n  font-weight: 600;\\\\n  margin-bottom: 0.35rem;\\\\n}\\n.sfb-field input[type=\\\"text\\\"],\\n.sfb-field textarea {\\\\n  width: 100%;\\\\n  padding: 0.625rem 0.75rem;\\\\n  border: 1px solid #d1d5db;\\\\n  border-radius: 6px;\\\\n  font-size: 1rem;\\\\n  line-height: 1.4;\\\\n  background: #fff;\\\\n}\\n.sfb-field textarea {\\\\n  resize: vertical;\\\\n}\\n.sfb-required {\\\\n  color: #ef4444;\\\\n}\\n.sfb-counter {\\\\n  margin-top: 0.375rem;\\\\n  font-size: 0.875rem;\\\\n  color: #6b7280;\\\\n}\\n.sfb-help {\\\\n  margin-top: 0.25rem;\\\\n  font-size: 0.875rem;\\\\n  color: #9ca3af;\\\\n}\\n.sfb-actions {\\\\n  margin-top: 1rem;\\\\n}\\n.sfb-button {\\\\n  background-color: #2563eb;\\\\n  color: #fff;\\\\n  border: none;\\\\n  padding: 0.625rem 1rem;\\\\n  border-radius: 6px;\\\\n  cursor: pointer;\\\\n  font-weight: 600;\\\\n}\\n.sfb-button:hover {\\\\n  background-color: #1d4ed8;\\\\n}\\n.sfb-notice {\\\\n  padding: 0.75rem 1rem;\\\\n  border-radius: 6px;\\\\n  margin-bottom: 1rem;\\\\n}\\n.sfb-success {\\\\n  background: #ecfdf5;\\\\n  color: #065f46;\\\\n  border: 1px solid #34d399;\\\\n}\\n.sfb-error {\\\\n  background: #fef2f2;\\\\n  color: #991b1b;\\\\n  border: 1px solid #fca5a5;\\\\n}\\n.sfb-list {\\\\n  margin-top: 2rem;\\\\n}\\n.sfb-list-title {\\\\n  font-size: 1.125rem;\\\\n  margin-bottom: 0.75rem;\\\\n}\\n.sfb-items {\\\\n  list-style: none;\\\\n  margin: 0;\\\\n  padding: 0;\\\\n}\\n.sfb-item {\\\\n  padding: 0.875rem 0;\\\\n  border-top: 1px solid #f3f4f6;\\\\n}\\n.sfb-item:first-child {\\\\n  border-top: none;\\\\n}\\n.sfb-item-name {\\\\n  font-weight: 600;\\\\n  margin-bottom: 0.25rem;\\\\n}\\n.sfb-item-message p {\\\\n  margin: 0.25rem 0;\\\\n}\\n.sfb-empty {\\\\n  color: #6b7280;\\\\n}\\n\",\n  \"simple-feedback-board/assets/js/script.js\": \"(function($){\\n  function countWords(str){\\n    if(!str){ return 0; }\\n    var cleaned = String(str).trim().replace(/\\\\s+/g, ' ');\\n    if(cleaned === ''){ return 0; }\\n    return cleaned.split(' ').length;\\n  }\\n\\n  function updateCounter($textarea, $counter, limit){\\n    var text = $textarea.val();\\n    var words = countWords(text);\\n    var display = (SFB && SFB.i18n && SFB.i18n.wordCount) ? SFB.i18n.wordCount : '%1$d / %2$d words';\\n    // Replace placeholders\\n    display = display.replace('%1$d', words).replace('%2$d', limit);\\n    $counter.text(display);\\n    if(words > limit){\\n      $counter.addClass('sfb-over');\\n    } else {\\n      $counter.removeClass('sfb-over');\\n    }\\n  }\\n\\n  $(document).on('input', '#sfb_message', function(){\\n    var $t = $(this);\\n    var limit = parseInt((SFB && SFB.wordLimit) ? SFB.wordLimit : 150, 10);\\n    var words = countWords($t.val());\\n\\n    // If over the limit, trim to limit\\n    if(words > limit){\\n      var parts = String($t.val()).trim().replace(/\\\\s+/g, ' ').split(' ');\\n      var trimmed = parts.slice(0, limit).join(' ');\\n      $t.val(trimmed + ' ');\\n    }\\n    updateCounter($t, $('#sfb_counter'), limit);\\n  });\\n\\n  $(document).ready(function(){\\n    var $ta = $('#sfb_message');\\n    if($ta.length){\\n      updateCounter($ta, $('#sfb_counter'), parseInt((SFB && SFB.wordLimit) ? SFB.wordLimit : 150, 10));\\n    }\\n\\n    $('.sfb-form').on('submit', function(e){\\n      var $name = $('#sfb_name');\\n      var $msg = $('#sfb_message');\\n      var limit = parseInt((SFB && SFB.wordLimit) ? SFB.wordLimit : 150, 10);\\n      var errs = [];\\n      if($.trim($name.val()) === ''){\\n        errs.push('name');\\n      }\\n      if($.trim($msg.val()) === ''){\\n        errs.push('message');\\n      }\\n      if(countWords($msg.val()) > limit){\\n        errs.push('tooLong');\\n      }\\n      if(errs.length){\\n        // Prevent submit and update counter state\\n        e.preventDefault();\\n        updateCounter($msg, $('#sfb_counter'), limit);\\n      }\\n    });\\n  });\\n})(jQuery);\\n\",\n  \"simple-feedback-board/includes/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/templates/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/assets/css/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/assets/js/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/languages/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/uninstall.php\": \"<?php\\nif (!defined('WP_UNINSTALL_PLUGIN')) {\\n    exit;\\n}\\n\\n// Delete all feedback posts\\n$posts = get_posts(array(\\n    'post_type' => 'sfb_feedback',\\n    'numberposts' => -1,\\n    'post_status' => 'any',\\n    'fields' => 'ids',\\n));\\n\\nif (!empty($posts) && is_array($posts)) {\\n    foreach ($posts as $post_id) {\\n        wp_delete_post($post_id, true);\\n    }\\n}\\n\",\n  \"simple-feedback-board/readme.txt\": \"=== Simple Feedback Board ===\\nContributors: makeplugin\\nTags: feedback, form, guestbook, testimonials, comments, frontend, contact, public, submissions\\nRequires at least: 5.2\\nTested up to: 6.8\\nStable tag: 1.0.0\\nRequires PHP: 7.4\\nLicense: GPLv2 or later\\n\\nPublic feedback form with a live list of all submissions.\\n\\n== Description ==\\nProvide a minimal, user-friendly public feedback form with two fields: Name and Message. Both fields are required. Message is limited to 150 words with a live word counter and clear validation messages. Submissions are saved and persist. Below the form, display all feedback ever submitted in a clean list (newest first), showing the Name and Message. No login required; anyone can submit. Show a simple success notice after submission and handle errors gracefully. Include light, modern styling to keep the layout clean and readable. Offer a simple way for the site owner to place this form-and-list on a page.\\n\\nUse the shortcode: [simple_feedback_board]\\n\\n== Installation ==\\n1. Upload the plugin to the /wp-content/plugins/ directory or install via the Plugins screen.\\n2. Activate the plugin through the Plugins screen in WordPress.\\n3. Add the shortcode [simple_feedback_board] to any page or post.\\n\\n== Frequently Asked Questions ==\\n= How do I display the feedback form and list? =\\nUse the shortcode [simple_feedback_board] on any page or post.\\n\\n= Do users need to be logged in to submit feedback? =\\nNo. Anyone can submit feedback.\\n\\n== Changelog ==\\n= 1.0.0 =\\n- Initial release.\\n\"\n}\n```"
    },
    {
      "role": "user",
      "content": "It has no styling thats so barebones. I want some sort of styling and all. Functionally its fine. Also, it reloads the page after submitting, cant it stay? Would prefer that."
    },
    {
      "role": "consultant",
      "content": "Absolutely\u2014We\u2019ll add a clean, modern look and make submissions happen in-place without reloading. I\u2019ll update the plugin now; please hold on while we generate the improved version.",
      "requirements_finalized": true,
      "requirements": {
        "name": "Simple Feedback Board",
        "description": "Public feedback form with styled list and smooth submission.",
        "details": "Provide a minimal, user-friendly public feedback form with two required fields: Name and Message (limit 150 words with a live counter). Submissions save and persist. Below the form, display all feedback (newest first) showing Name and Message. Improve visuals with a clean, modern style: card-like container, clear labels, roomy inputs, subtle borders/shadows, accessible focus states, and a prominent button. Make the form submit in-place without reloading the page; on success, show a brief success message, clear the form, and immediately add the new feedback to the top of the list. Handle validation and errors inline. No login required. Provide a simple way for the site owner to place the combined form-and-list on a page."
      }
    },
    {
      "role": "developer",
      "content": "I've created your plugin, packaged as a zip, ready to download and install!. Here are some instructions on how to get started with it:\n'''\n# Instructions\nIn your WordPress dashboard, go to Plugins > Add New > Upload Plugin, select the provided ZIP file, then Install and Activate. To display the feedback form and list, edit any page or post and add the shortcode [simple_feedback_board] (you can use a Shortcode block in the editor), then update/publish the page. Visit that page to start collecting feedback instantly.\n'''",
      "zip_id": 1,
      "raw_response": "## Folder Structure\n```\nsimple-feedback-board/\n\u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u251c\u2500\u2500 index.php\n\u2502   \u2502   \u2514\u2500\u2500 style.css\n\u2502   \u2514\u2500\u2500 js/\n\u2502       \u251c\u2500\u2500 index.php\n\u2502       \u2514\u2500\u2500 script.js\n\u251c\u2500\u2500 includes/\n\u2502   \u251c\u2500\u2500 class-sfb.php\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 languages/\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 form-list.php\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 readme.txt\n\u251c\u2500\u2500 simple-feedback-board.php\n\u2514\u2500\u2500 uninstall.php\n```\n\n## Plugin Files\n```json\n{\n  \"simple-feedback-board/simple-feedback-board.php\": \"<?php\\n/**\\n * Plugin Name: Simple Feedback Board\\n * Description: Public feedback form with styled list and smooth submission.\\n * Version: 1.1.0\\n * Author: makeplugin\\n * Text Domain: simple-feedback-board\\n * License: GPLv2 or later\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\n// Load text domain\\nadd_action('plugins_loaded', function () {\\n    load_plugin_textdomain('simple-feedback-board', false, dirname(plugin_basename(__FILE__)) . '/languages');\\n});\\n\\nrequire_once plugin_dir_path(__FILE__) . 'includes/class-sfb.php';\\n\\n// Initialize plugin\\nadd_action('init', function () {\\n    \\\\SFB_Plugin::get_instance();\\n});\\n\",\n  \"simple-feedback-board/includes/class-sfb.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nclass SFB_Plugin {\\n    /**\\n     * Singleton instance\\n     *\\n     * @var SFB_Plugin\\n     */\\n    private static $instance;\\n\\n    /**\\n     * Word limit for message\\n     *\\n     * @var int\\n     */\\n    private $word_limit = 150;\\n\\n    /**\\n     * Get instance\\n     *\\n     * @return SFB_Plugin\\n     */\\n    public static function get_instance() {\\n        if (null === self::$instance) {\\n            self::$instance = new self();\\n        }\\n        return self::$instance;\\n    }\\n\\n    /**\\n     * Constructor\\n     */\\n    private function __construct() {\\n        $this->register_hooks();\\n    }\\n\\n    /**\\n     * Register WordPress hooks\\n     */\\n    private function register_hooks() {\\n        add_action('init', array($this, 'register_post_type'));\\n        add_shortcode('simple_feedback_board', array($this, 'shortcode'));\\n        add_action('wp_enqueue_scripts', array($this, 'enqueue_assets'));\\n\\n        // AJAX submission (both logged-in and public)\\n        add_action('wp_ajax_sfb_submit', array($this, 'ajax_submit'));\\n        add_action('wp_ajax_nopriv_sfb_submit', array($this, 'ajax_submit'));\\n    }\\n\\n    /**\\n     * Register custom post type to store feedback\\n     */\\n    public function register_post_type() {\\n        $labels = array(\\n            'name' => esc_html__('Feedback', 'simple-feedback-board'),\\n            'singular_name' => esc_html__('Feedback Item', 'simple-feedback-board')\\n        );\\n\\n        $args = array(\\n            'labels' => $labels,\\n            'public' => false,\\n            'show_ui' => false,\\n            'show_in_menu' => false,\\n            'supports' => array('title', 'editor'),\\n            'capability_type' => 'post',\\n            'rewrite' => false,\\n            'query_var' => false\\n        );\\n\\n        register_post_type('sfb_feedback', $args);\\n    }\\n\\n    /**\\n     * Shortcode callback to render form and list\\n     *\\n     * @return string\\n     */\\n    public function shortcode() {\\n        // Fetch all feedback items (newest first)\\n        $feedback_items = $this->get_feedback_items();\\n\\n        ob_start();\\n        $word_limit = (int) $this->word_limit;\\n        $template = plugin_dir_path(dirname(__FILE__)) . 'templates/form-list.php';\\n        if (file_exists($template)) {\\n            include $template;\\n        }\\n        return ob_get_clean();\\n    }\\n\\n    /**\\n     * Enqueue styles and scripts\\n     */\\n    public function enqueue_assets() {\\n        $ver = '1.1.0';\\n\\n        wp_enqueue_style(\\n            'sfb-style',\\n            plugin_dir_url(dirname(__FILE__)) . 'assets/css/style.css',\\n            array(),\\n            $ver\\n        );\\n\\n        wp_enqueue_script(\\n            'sfb-script',\\n            plugin_dir_url(dirname(__FILE__)) . 'assets/js/script.js',\\n            array('jquery'),\\n            $ver,\\n            true\\n        );\\n\\n        wp_localize_script('sfb-script', 'SFB', array(\\n            'ajaxUrl'   => esc_url(admin_url('admin-ajax.php')),\\n            'nonce'     => wp_create_nonce('sfb_submit_ajax'),\\n            'wordLimit' => (int) $this->word_limit,\\n            'i18n' => array(\\n                /* translators: %d: maximum number of words allowed */\\n                'maxWords'  => sprintf(esc_html__('Maximum %d words.', 'simple-feedback-board'), (int) $this->word_limit),\\n                /* translators: 1: current word count, 2: max words */\\n                'wordCount' => esc_html__('%1$d / %2$d words', 'simple-feedback-board'),\\n                'tooLong'   => esc_html__('Your message is too long.', 'simple-feedback-board'),\\n                'required'  => esc_html__('This field is required.', 'simple-feedback-board'),\\n                'success'   => esc_html__('Thank you! Your feedback has been submitted.', 'simple-feedback-board'),\\n                'error'     => esc_html__('An error occurred. Please try again.', 'simple-feedback-board')\\n            )\\n        ));\\n    }\\n\\n    /**\\n     * AJAX handler for feedback submission\\n     */\\n    public function ajax_submit() {\\n        if (!defined('DOING_AJAX') || !DOING_AJAX) {\\n            wp_send_json_error(array('message' => esc_html__('Invalid request.', 'simple-feedback-board')));\\n        }\\n\\n        check_ajax_referer('sfb_submit_ajax', 'nonce');\\n\\n        $name_raw    = isset($_POST['name']) ? wp_unslash($_POST['name']) : '';\\n        $message_raw = isset($_POST['message']) ? wp_unslash($_POST['message']) : '';\\n\\n        $name = sanitize_text_field($name_raw);\\n        $message = trim(wp_strip_all_tags($message_raw));\\n\\n        $errors = array();\\n\\n        if ($name === '') {\\n            $errors['name'] = esc_html__('Please enter your name.', 'simple-feedback-board');\\n        }\\n        if ($message === '') {\\n            $errors['message'] = esc_html__('Please enter a message.', 'simple-feedback-board');\\n        }\\n\\n        $word_count = $this->count_words($message);\\n        if ($word_count > $this->word_limit) {\\n            /* translators: %d: word limit */\\n            $errors['message'] = sprintf(esc_html__('Please keep your message under %d words.', 'simple-feedback-board'), (int) $this->word_limit);\\n        }\\n\\n        if (!empty($errors)) {\\n            wp_send_json_error(array(\\n                'errors' => $errors\\n            ), 400);\\n        }\\n\\n        $postarr = array(\\n            'post_type'    => 'sfb_feedback',\\n            'post_title'   => $name,\\n            'post_content' => $message,\\n            'post_status'  => 'publish',\\n        );\\n\\n        $insert_id = wp_insert_post($postarr, true);\\n\\n        if (is_wp_error($insert_id)) {\\n            wp_send_json_error(array(\\n                'message' => esc_html__('An error occurred while saving your feedback. Please try again.', 'simple-feedback-board')\\n            ), 500);\\n        }\\n\\n        $post = get_post($insert_id);\\n        $item_html = $this->render_item($post);\\n\\n        wp_send_json_success(array(\\n            'message'  => esc_html__('Thank you! Your feedback has been submitted.', 'simple-feedback-board'),\\n            'itemHtml' => $item_html\\n        ));\\n    }\\n\\n    /**\\n     * Get all feedback posts\\n     *\\n     * @return WP_Post[]\\n     */\\n    private function get_feedback_items() {\\n        $args = array(\\n            'post_type'           => 'sfb_feedback',\\n            'posts_per_page'      => -1,\\n            'post_status'         => 'publish',\\n            'orderby'             => 'date',\\n            'order'               => 'DESC',\\n            'no_found_rows'       => true,\\n            'ignore_sticky_posts' => true,\\n        );\\n        $q = new WP_Query($args);\\n        return $q->posts;\\n    }\\n\\n    /**\\n     * Render a single feedback item list HTML safely\\n     *\\n     * @param WP_Post $item\\n     * @return string\\n     */\\n    private function render_item($item) {\\n        if (!$item instanceof WP_Post) {\\n            return '';\\n        }\\n        $item_name = get_the_title($item);\\n        $item_message_raw = $item->post_content;\\n        $item_message = wpautop(esc_html($item_message_raw));\\n\\n        ob_start();\\n        ?>\\n        <li class=\\\"sfb-item\\\">\\n            <div class=\\\"sfb-item-name\\\"><?php echo esc_html($item_name); ?></div>\\n            <div class=\\\"sfb-item-message\\\"><?php echo wp_kses_post($item_message); ?></div>\\n        </li>\\n        <?php\\n        return (string) ob_get_clean();\\n    }\\n\\n    /**\\n     * Count words in a string\\n     *\\n     * @param string $text\\n     * @return int\\n     */\\n    private function count_words($text) {\\n        $text = trim((string) $text);\\n        if ('' === $text) {\\n            return 0;\\n        }\\n        $text = preg_replace('/\\\\s+/u', ' ', $text);\\n        $words = explode(' ', $text);\\n        return count($words);\\n    }\\n}\\n\",\n  \"simple-feedback-board/templates/form-list.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n?>\\n<div class=\\\"sfb-wrap\\\" data-sfb>\\n    <div class=\\\"sfb-header\\\">\\n        <h2 class=\\\"sfb-title\\\"><?php echo esc_html__('Share Your Feedback', 'simple-feedback-board'); ?></h2>\\n        <p class=\\\"sfb-subtitle\\\"><?php echo esc_html__('We value your thoughts. Please keep it friendly and concise.', 'simple-feedback-board'); ?></p>\\n    </div>\\n\\n    <div class=\\\"sfb-notice sfb-success\\\" role=\\\"status\\\" aria-live=\\\"polite\\\" style=\\\"display:none\\\"></div>\\n    <div class=\\\"sfb-notice sfb-error\\\" role=\\\"alert\\\" style=\\\"display:none\\\"></div>\\n\\n    <form class=\\\"sfb-form\\\" method=\\\"post\\\" action=\\\"<?php echo esc_url( home_url( add_query_arg( null, null ) ) ); ?>\\\" novalidate>\\n        <div class=\\\"sfb-field\\\" data-field=\\\"name\\\">\\n            <label for=\\\"sfb_name\\\" class=\\\"sfb-label\\\"><?php echo esc_html__('Name', 'simple-feedback-board'); ?> <span class=\\\"sfb-required\\\" aria-hidden=\\\"true\\\">*</span></label>\\n            <input type=\\\"text\\\" id=\\\"sfb_name\\\" name=\\\"sfb_name\\\" class=\\\"sfb-input\\\" value=\\\"\\\" required maxlength=\\\"200\\\" />\\n            <p class=\\\"sfb-error-text\\\" data-error-for=\\\"name\\\" aria-live=\\\"polite\\\"></p>\\n        </div>\\n        <div class=\\\"sfb-field\\\" data-field=\\\"message\\\">\\n            <label for=\\\"sfb_message\\\" class=\\\"sfb-label\\\"><?php echo esc_html__('Message', 'simple-feedback-board'); ?> <span class=\\\"sfb-required\\\" aria-hidden=\\\"true\\\">*</span></label>\\n            <textarea id=\\\"sfb_message\\\" name=\\\"sfb_message\\\" class=\\\"sfb-textarea\\\" rows=\\\"5\\\" required aria-describedby=\\\"sfb_counter\\\"></textarea>\\n            <div id=\\\"sfb_counter\\\" class=\\\"sfb-counter\\\" aria-live=\\\"polite\\\"></div>\\n            <div class=\\\"sfb-help\\\"><?php /* translators: %d: word limit */ printf(esc_html__('Up to %d words.', 'simple-feedback-board'), (int) $word_limit); ?></div>\\n            <p class=\\\"sfb-error-text\\\" data-error-for=\\\"message\\\" aria-live=\\\"polite\\\"></p>\\n        </div>\\n        <div class=\\\"sfb-actions\\\">\\n            <button type=\\\"submit\\\" class=\\\"sfb-button\\\">\\n                <span class=\\\"sfb-button-text\\\"><?php echo esc_html__('Send Feedback', 'simple-feedback-board'); ?></span>\\n                <span class=\\\"sfb-spinner\\\" aria-hidden=\\\"true\\\"></span>\\n            </button>\\n        </div>\\n    </form>\\n\\n    <div class=\\\"sfb-list\\\">\\n        <h3 class=\\\"sfb-list-title\\\"><?php echo esc_html__('All Feedback', 'simple-feedback-board'); ?></h3>\\n        <?php if (!empty($feedback_items)) : ?>\\n            <ul class=\\\"sfb-items\\\">\\n                <?php foreach ($feedback_items as $item) : ?>\\n                    <?php\\n                    $item_name = get_the_title($item);\\n                    $item_message_raw = $item->post_content;\\n                    $item_message = wpautop(esc_html($item_message_raw));\\n                    ?>\\n                    <li class=\\\"sfb-item\\\">\\n                        <div class=\\\"sfb-item-name\\\"><?php echo esc_html($item_name); ?></div>\\n                        <div class=\\\"sfb-item-message\\\"><?php echo wp_kses_post($item_message); ?></div>\\n                    </li>\\n                <?php endforeach; ?>\\n            </ul>\\n        <?php else : ?>\\n            <p class=\\\"sfb-empty\\\"><?php echo esc_html__('No feedback has been submitted yet.', 'simple-feedback-board'); ?></p>\\n            <ul class=\\\"sfb-items\\\" style=\\\"display:none\\\"></ul>\\n        <?php endif; ?>\\n    </div>\\n</div>\\n\",\n  \"simple-feedback-board/assets/css/style.css\": \"/* Simple Feedback Board - Modern Styles */\\n.sfb-wrap{max-width:760px;margin:2rem auto;padding:1.25rem 1.25rem 1.5rem;background:#ffffff;border:1px solid #e5e7eb;border-radius:12px;box-shadow:0 10px 15px -10px rgba(0,0,0,.2),0 4px 6px -4px rgba(0,0,0,.1);font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans','Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji'}\\n.sfb-header{margin-bottom:1rem}\\n.sfb-title{margin:0 0 .25rem;font-size:1.35rem;line-height:1.25}\\n.sfb-subtitle{margin:.25rem 0 0;color:#6b7280}\\n\\n.sfb-field{margin-bottom:1rem}\\n.sfb-label{display:block;font-weight:600;margin-bottom:.35rem}\\n.sfb-required{color:#ef4444}\\n.sfb-input,.sfb-textarea{width:100%;padding:.7rem .9rem;border:1px solid #d1d5db;border-radius:8px;font-size:1rem;line-height:1.4;background:#fff;transition:border-color .15s ease, box-shadow .15s ease}\\n.sfb-input:focus,.sfb-textarea:focus{outline:2px solid transparent;outline-offset:2px;border-color:#2563eb;box-shadow:0 0 0 3px rgba(37,99,235,.2)}\\n.sfb-textarea{resize:vertical;min-height:120px}\\n.sfb-counter{margin-top:.375rem;font-size:.875rem;color:#6b7280}\\n.sfb-help{margin-top:.25rem;font-size:.85rem;color:#9ca3af}\\n.sfb-error-text{min-height:1.1em;margin:.25rem 0 0;color:#b91c1c;font-size:.9rem}\\n\\n.sfb-actions{margin-top:1rem}\\n.sfb-button{display:inline-flex;align-items:center;gap:.5rem;background:#2563eb;color:#fff;border:none;padding:.65rem 1rem;border-radius:8px;cursor:pointer;font-weight:700;text-decoration:none;transition:background .15s ease, transform .05s ease}\\n.sfb-button:hover{background:#1d4ed8}\\n.sfb-button:active{transform:translateY(1px)}\\n.sfb-spinner{width:16px;height:16px;border:2px solid rgba(255,255,255,.5);border-top-color:#fff;border-radius:50%;display:none;animation:sfb-spin 1s linear infinite}\\n.sfb-button.loading .sfb-spinner{display:inline-block}\\n.sfb-button.loading .sfb-button-text{opacity:.8}\\n@keyframes sfb-spin{to{transform:rotate(360deg)}}\\n\\n.sfb-notice{padding:.75rem 1rem;border-radius:8px;margin:.5rem 0;display:block}\\n.sfb-success{background:#ecfdf5;color:#065f46;border:1px solid #34d399}\\n.sfb-error{background:#fef2f2;color:#991b1b;border:1px solid #fca5a5}\\n\\n.sfb-list{margin-top:1.5rem}\\n.sfb-list-title{font-size:1.125rem;margin-bottom:.75rem}\\n.sfb-items{list-style:none;margin:0;padding:0}\\n.sfb-item{padding:.9rem 0;border-top:1px solid #f3f4f6}\\n.sfb-item:first-child{border-top:none}\\n.sfb-item-name{font-weight:700;margin-bottom:.25rem}\\n.sfb-item-message p{margin:.25rem 0}\\n.sfb-empty{color:#6b7280}\\n\\n/* Counter limit alert */\\n.sfb-counter.sfb-over{color:#b91c1c}\\n\",\n  \"simple-feedback-board/assets/js/script.js\": \"(function($){\\n  'use strict';\\n\\n  function countWords(str){\\n    if(!str){ return 0; }\\n    var cleaned = String(str).trim().replace(/\\\\s+/g, ' ');\\n    if(cleaned === ''){ return 0; }\\n    return cleaned.split(' ').length;\\n  }\\n\\n  function updateCounter($textarea, $counter, limit){\\n    var text = $textarea.val();\\n    var words = countWords(text);\\n    var display = (SFB && SFB.i18n && SFB.i18n.wordCount) ? SFB.i18n.wordCount : '%1$d / %2$d words';\\n    display = display.replace('%1$d', words).replace('%2$d', limit);\\n    $counter.text(display);\\n    if(words > limit){\\n      $counter.addClass('sfb-over');\\n    } else {\\n      $counter.removeClass('sfb-over');\\n    }\\n  }\\n\\n  function setLoading($btn, loading){\\n    if(loading){\\n      $btn.addClass('loading').prop('disabled', true);\\n    } else {\\n      $btn.removeClass('loading').prop('disabled', false);\\n    }\\n  }\\n\\n  function clearErrors($wrap){\\n    $wrap.find('.sfb-error-text').text('');\\n    $wrap.find('.sfb-notice.sfb-error').hide().text('');\\n  }\\n\\n  function showSuccess($wrap, message){\\n    var $notice = $wrap.find('.sfb-notice.sfb-success');\\n    $notice.text(message || (SFB && SFB.i18n && SFB.i18n.success ? SFB.i18n.success : 'Success')).fadeIn(150);\\n    setTimeout(function(){ $notice.fadeOut(250); }, 3000);\\n  }\\n\\n  $(document).on('input', '#sfb_message', function(){\\n    var $t = $(this);\\n    var limit = parseInt((SFB && SFB.wordLimit) ? SFB.wordLimit : 150, 10);\\n    var words = countWords($t.val());\\n\\n    if(words > limit){\\n      var parts = String($t.val()).trim().replace(/\\\\s+/g, ' ').split(' ');\\n      var trimmed = parts.slice(0, limit).join(' ');\\n      $t.val(trimmed + ' ');\\n    }\\n    updateCounter($t, $('#sfb_counter'), limit);\\n  });\\n\\n  $(document).ready(function(){\\n    var $wrap = $('[data-sfb]');\\n    if(!$wrap.length){ return; }\\n\\n    var $form = $wrap.find('.sfb-form');\\n    var $name = $wrap.find('#sfb_name');\\n    var $msg  = $wrap.find('#sfb_message');\\n    var $btn  = $wrap.find('.sfb-button');\\n    var $items = $wrap.find('.sfb-items');\\n    var $empty = $wrap.find('.sfb-empty');\\n\\n    updateCounter($msg, $('#sfb_counter'), parseInt((SFB && SFB.wordLimit) ? SFB.wordLimit : 150, 10));\\n\\n    $form.on('submit', function(e){\\n      e.preventDefault();\\n      clearErrors($wrap);\\n\\n      var limit = parseInt((SFB && SFB.wordLimit) ? SFB.wordLimit : 150, 10);\\n      var errs = {};\\n      if($.trim($name.val()) === ''){ errs.name = (SFB && SFB.i18n && SFB.i18n.required) ? SFB.i18n.required : 'Required'; }\\n      if($.trim($msg.val()) === ''){ errs.message = (SFB && SFB.i18n && SFB.i18n.required) ? SFB.i18n.required : 'Required'; }\\n      if(countWords($msg.val()) > limit){ errs.message = (SFB && SFB.i18n && SFB.i18n.tooLong) ? SFB.i18n.tooLong : 'Too long'; }\\n\\n      if(Object.keys(errs).length){\\n        if(errs.name){ $wrap.find('[data-error-for=\\\"name\\\"]').text(errs.name); }\\n        if(errs.message){ $wrap.find('[data-error-for=\\\"message\\\"]').text(errs.message); }\\n        updateCounter($msg, $('#sfb_counter'), limit);\\n        return;\\n      }\\n\\n      setLoading($btn, true);\\n\\n      $.ajax({\\n        url: (SFB && SFB.ajaxUrl) ? SFB.ajaxUrl : '',\\n        method: 'POST',\\n        dataType: 'json',\\n        data: {\\n          action: 'sfb_submit',\\n          nonce: (SFB && SFB.nonce) ? SFB.nonce : '',\\n          name: $name.val(),\\n          message: $msg.val()\\n        }\\n      }).done(function(resp){\\n        if(resp && resp.success){\\n          showSuccess($wrap, resp.data && resp.data.message ? resp.data.message : null);\\n          // Clear form\\n          $name.val('');\\n          $msg.val('');\\n          updateCounter($msg, $('#sfb_counter'), parseInt(SFB.wordLimit, 10));\\n          $wrap.find('[data-error-for=\\\"name\\\"]').text('');\\n          $wrap.find('[data-error-for=\\\"message\\\"]').text('');\\n\\n          if($empty.length){ $empty.remove(); }\\n          if($items.is(':hidden')){ $items.show(); }\\n          if(resp.data && resp.data.itemHtml){\\n            // Prepend new item\\n            $items.prepend(resp.data.itemHtml);\\n          }\\n        } else {\\n          var msg = (SFB && SFB.i18n && SFB.i18n.error) ? SFB.i18n.error : 'Error';\\n          $wrap.find('.sfb-notice.sfb-error').text(msg).show();\\n        }\\n      }).fail(function(xhr){\\n        var data = xhr && xhr.responseJSON ? xhr.responseJSON : null;\\n        if(data && data.data && data.data.errors){\\n          if(data.data.errors.name){ $wrap.find('[data-error-for=\\\"name\\\"]').text(data.data.errors.name); }\\n          if(data.data.errors.message){ $wrap.find('[data-error-for=\\\"message\\\"]').text(data.data.errors.message); }\\n        } else {\\n          var msg = (SFB && SFB.i18n && SFB.i18n.error) ? SFB.i18n.error : 'Error';\\n          $wrap.find('.sfb-notice.sfb-error').text(msg).show();\\n        }\\n      }).always(function(){\\n        setLoading($btn, false);\\n      });\\n    });\\n  });\\n})(jQuery);\\n\",\n  \"simple-feedback-board/includes/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/templates/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/assets/css/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/assets/js/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/languages/index.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\",\n  \"simple-feedback-board/uninstall.php\": \"<?php\\nif (!defined('WP_UNINSTALL_PLUGIN')) {\\n    exit;\\n}\\n\\n// Delete all feedback posts\\n$posts = get_posts(array(\\n    'post_type'   => 'sfb_feedback',\\n    'numberposts' => -1,\\n    'post_status' => 'any',\\n    'fields'      => 'ids',\\n));\\n\\nif (!empty($posts) && is_array($posts)) {\\n    foreach ($posts as $post_id) {\\n        wp_delete_post($post_id, true);\\n    }\\n}\\n\",\n  \"simple-feedback-board/readme.txt\": \"=== Simple Feedback Board ===\\nContributors: makeplugin\\nTags: feedback, form, guestbook, testimonials, comments, frontend, contact, public, submissions\\nRequires at least: 5.2\\nTested up to: 6.8\\nStable tag: 1.1.0\\nRequires PHP: 7.4\\nLicense: GPLv2 or later\\n\\nPublic feedback form with styled list and smooth submission.\\n\\n== Description ==\\nProvide a minimal, user-friendly public feedback form with two required fields: Name and Message (limit 150 words with a live counter). Submissions save and persist. Below the form, display all feedback (newest first) showing Name and Message. Improve visuals with a clean, modern style: card-like container, clear labels, roomy inputs, subtle borders/shadows, accessible focus states, and a prominent button. Make the form submit in-place without reloading the page; on success, show a brief success message, clear the form, and immediately add the new feedback to the top of the list. Handle validation and errors inline. No login required. Provide a simple way for the site owner to place the combined form-and-list on a page.\\n\\nUse the shortcode: [simple_feedback_board]\\n\\n== Installation ==\\n1. Upload the plugin to the /wp-content/plugins/ directory or install via the Plugins screen.\\n2. Activate the plugin through the Plugins screen in WordPress.\\n3. Add the shortcode [simple_feedback_board] to any page or post.\\n\\n== Frequently Asked Questions ==\\n= How do I display the feedback form and list? =\\nUse the shortcode [simple_feedback_board] on any page or post.\\n\\n= Do users need to be logged in to submit feedback? =\\nNo. Anyone can submit feedback.\\n\\n== Changelog ==\\n= 1.1.0 =\\n- Added AJAX (in-place) submission with inline validation and instant list update.\\n- Added modern, accessible styling and focus states.\\n\\n= 1.0.0 =\\n- Initial release.\\n\"\n}\n```"
    }
  ]
}