{
  "messages": [
    {
      "role": "consultant",
      "content": "Hi, I am Plugin Pal - your WordPress plugin assistant!\n To begin, please describe the plugin you want to create.",
      "requirements": {},
      "requirements_finalized": false
    },
    {
      "role": "user",
      "content": "Create a plugin for a weather widget on my homepage."
    },
    {
      "role": "consultant",
      "content": "Great\u2014happy to build this. Quick choices: should it auto-detect each visitor\u2019s location or always show a specific city you set? Which unit should be default (\u00b0C or \u00b0F)? Do you want just current temp + icon, or also today\u2019s high/low?",
      "requirements_finalized": false,
      "requirements": {
        "name": "Homepage Weather Widget",
        "description": "Simple weather widget for the homepage",
        "details": "Add a compact weather widget to the homepage that shows the current temperature, weather condition, and an icon for a chosen location. Site owner can set the default city and choose \u00b0C or \u00b0F; visitors optionally can switch units. Data refreshes about every 30 minutes and shows a friendly fallback if the weather source is unavailable. The widget should be lightweight, responsive, and visually neutral to blend with the site\u2019s design, with minimal text and clear iconography."
      }
    },
    {
      "role": "user",
      "content": "In celsius for the city of Zurich both, current temp and high/low please"
    },
    {
      "role": "consultant",
      "content": "Perfect\u2014Zurich in Celsius with current temperature plus today\u2019s high/low. I\u2019ve got everything I need. I\u2019ll start the plugin generation now; please sit tight while we put it together.",
      "requirements_finalized": true,
      "requirements": {
        "name": "Homepage Weather Widget",
        "description": "Simple weather widget for the homepage",
        "details": "Add a compact weather widget to the homepage that displays the current temperature, today\u2019s high and low, a brief condition label (e.g., Sunny/Cloudy), and a matching icon for Zurich, Switzerland. Default unit is Celsius only (no unit switching). The widget should update roughly every 30 minutes, handle outages gracefully with a friendly fallback message, and load quickly. It should be responsive and visually neutral so it blends with the site\u2019s design, with minimal text and clear iconography. The site owner does not need to choose locations; the widget always shows Zurich."
      }
    },
    {
      "role": "developer",
      "content": "I've created your plugin, packaged as a zip, ready to download and install!. Here are some instructions on how to get started with it:\nIn your WordPress dashboard, go to Plugins > Add New > Upload Plugin, upload the ZIP we provided, and activate it. To display it, go to Appearance > Widgets and add \u201cHomepage Weather Widget\u201d to a sidebar/footer (you can set a title), or insert the [homepage_weather_widget] shortcode into any page or post. It shows Zurich weather in \u00b0C and updates automatically\u2014no further setup needed.\n'''",
      "zip_id": 0,
      "raw_response": "## Folder Structure\n```\nhomepage-weather-widget/\n\u251c\u2500\u2500 homepage-weather-widget.php\n\u251c\u2500\u2500 readme.txt\n\u251c\u2500\u2500 uninstall.php\n\u251c\u2500\u2500 includes/\n\u2502   \u251c\u2500\u2500 class-hww-weather-service.php\n\u2502   \u251c\u2500\u2500 class-hww-widget.php\n\u2502   \u2514\u2500\u2500 functions.php\n\u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 style.css\n\u2502   \u251c\u2500\u2500 script.js\n\u2502   \u2514\u2500\u2500 icons/\n\u2502       \u251c\u2500\u2500 clear-day.svg\n\u2502       \u251c\u2500\u2500 partly-cloudy.svg\n\u2502       \u251c\u2500\u2500 cloudy.svg\n\u2502       \u251c\u2500\u2500 rain.svg\n\u2502       \u251c\u2500\u2500 snow.svg\n\u2502       \u251c\u2500\u2500 thunderstorm.svg\n\u2502       \u251c\u2500\u2500 fog.svg\n\u2502       \u2514\u2500\u2500 wind.svg\n\u251c\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 widget.php\n\u2514\u2500\u2500 languages/\n    \u2514\u2500\u2500 homepage-weather-widget.pot\n```\n\n## Plugin Files\n```json\n{\n  \"homepage-weather-widget/homepage-weather-widget.php\": \"<?php\\n/**\\n * Plugin Name: Homepage Weather Widget\\n * Description: Simple weather widget for the homepage\\n * Version: 1.0.0\\n * Author: makeplugin\\n * Text Domain: homepage-weather-widget\\n * License: GPLv2 or later\\n */\\n\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nif (!defined('HWW_PLUGIN_VERSION')) {\\n    define('HWW_PLUGIN_VERSION', '1.0.0');\\n}\\n\\nif (!defined('HWW_PLUGIN_DIR')) {\\n    define('HWW_PLUGIN_DIR', plugin_dir_path(__FILE__));\\n}\\n\\nif (!defined('HWW_PLUGIN_URL')) {\\n    define('HWW_PLUGIN_URL', plugin_dir_url(__FILE__));\\n}\\n\\n// Load text domain\\nfunction hww_load_textdomain() {\\n    load_plugin_textdomain('homepage-weather-widget', false, dirname(plugin_basename(__FILE__)) . '/languages/');\\n}\\nadd_action('plugins_loaded', 'hww_load_textdomain');\\n\\n// Includes\\nrequire_once HWW_PLUGIN_DIR . 'includes/class-hww-weather-service.php';\\nrequire_once HWW_PLUGIN_DIR . 'includes/class-hww-widget.php';\\nrequire_once HWW_PLUGIN_DIR . 'includes/functions.php';\\n\\n// Register widget\\nfunction hww_register_widget() {\\n    register_widget('HWW_Widget');\\n}\\nadd_action('widgets_init', 'hww_register_widget');\\n\\n// Enqueue assets\\nfunction hww_enqueue_assets() {\\n    wp_enqueue_style(\\n        'hww-style',\\n        HWW_PLUGIN_URL . 'assets/style.css',\\n        array(),\\n        HWW_PLUGIN_VERSION\\n    );\\n}\\nadd_action('wp_enqueue_scripts', 'hww_enqueue_assets');\\n\",\n  \"homepage-weather-widget/readme.txt\": \"=== Homepage Weather Widget ===\\nContributors: makeplugin\\nTags: weather, widget, homepage, zurich, temperature, forecast\\nRequires at least: 5.2\\nTested up to: 6.8\\nStable tag: 1.0.0\\nLicense: GPLv2 or later\\nRequires PHP: 7.4\\n\\nSimple weather widget for the homepage.\\n\\n== Description ==\\nAdd a compact weather widget to the homepage that displays the current temperature, today\u2019s high and low, a brief condition label, and a matching icon for Zurich, Switzerland. The widget uses Celsius only, updates roughly every 30 minutes, handles outages gracefully with a friendly fallback message, and loads quickly with minimal styling to blend into your theme. Use the built-in widget or the [homepage_weather_widget] shortcode.\\n\\n== Installation ==\\n1. Upload the plugin files to the /wp-content/plugins/homepage-weather-widget directory, or install the plugin through the WordPress plugins screen directly.\\n2. Activate the plugin through the \\\\\\\"Plugins\\\\\\\" screen in WordPress.\\n3. Add the \\\\\\\"Homepage Weather Widget\\\\\\\" to a widget area or use the [homepage_weather_widget] shortcode.\\n\\n== Frequently Asked Questions ==\\n= Does this support changing the city or units? =\\nNo. It is fixed to Zurich, Switzerland and uses Celsius only.\\n\\n= How often is the weather updated? =\\nAbout every 30 minutes via WordPress transients.\\n\\n== Changelog ==\\n= 1.0.0 =\\n* Initial release.\\n\",\n  \"homepage-weather-widget/uninstall.php\": \"<?php\\nif (!defined('WP_UNINSTALL_PLUGIN')) {\\n    exit;\\n}\\n\\n// Clean up all plugin data\\n// Delete transients\\nif (function_exists('delete_transient')) {\\n    delete_transient('hww_weather_data');\\n}\\n\",\n  \"homepage-weather-widget/includes/class-hww-weather-service.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nclass HWW_Weather_Service {\\n    private $lat = '47.3769'; // Zurich\\n    private $lon = '8.5417';  // Zurich\\n    private $timezone = 'Europe/Zurich';\\n    private $cache_key = 'hww_weather_data';\\n    private $cache_ttl = 1800; // 30 minutes\\n\\n    public function get_weather() {\\n        $cached = get_transient($this->cache_key);\\n        if ($cached && is_array($cached)) {\\n            return $cached;\\n        }\\n\\n        $endpoint = add_query_arg(\\n            array(\\n                'latitude' => $this->lat,\\n                'longitude' => $this->lon,\\n                'current_weather' => 'true',\\n                'daily' => 'temperature_2m_max,temperature_2m_min,weathercode',\\n                'timezone' => $this->timezone\\n            ),\\n            'https://api.open-meteo.com/v1/forecast'\\n        );\\n\\n        $args = array(\\n            'timeout' => 8,\\n            'redirection' => 3,\\n            'user-agent' => 'Homepage-Weather-Widget/1.0 (+https://wordpress.org/)'\\n        );\\n\\n        $response = wp_remote_get($endpoint, $args);\\n        if (is_wp_error($response)) {\\n            return new WP_Error('hww_api_error', esc_html__('Weather service is temporarily unavailable.', 'homepage-weather-widget'));\\n        }\\n\\n        $code = wp_remote_retrieve_response_code($response);\\n        if ($code < 200 || $code >= 300) {\\n            return new WP_Error('hww_bad_status', esc_html__('Unable to fetch weather data.', 'homepage-weather-widget'));\\n        }\\n\\n        $body = wp_remote_retrieve_body($response);\\n        $data = json_decode($body, true);\\n        if (!is_array($data)) {\\n            return new WP_Error('hww_bad_json', esc_html__('Received invalid weather data.', 'homepage-weather-widget'));\\n        }\\n\\n        if (empty($data['current_weather']) || empty($data['daily'])) {\\n            return new WP_Error('hww_missing_fields', esc_html__('Weather data incomplete.', 'homepage-weather-widget'));\\n        }\\n\\n        $current_temp = isset($data['current_weather']['temperature']) ? floatval($data['current_weather']['temperature']) : null;\\n        $current_code = isset($data['current_weather']['weathercode']) ? intval($data['current_weather']['weathercode']) : null;\\n\\n        $daily_max = isset($data['daily']['temperature_2m_max'][0]) ? floatval($data['daily']['temperature_2m_max'][0]) : null;\\n        $daily_min = isset($data['daily']['temperature_2m_min'][0]) ? floatval($data['daily']['temperature_2m_min'][0]) : null;\\n\\n        $mapped = $this->map_weathercode($current_code);\\n\\n        $result = array(\\n            'temperature' => $current_temp,\\n            'high' => $daily_max,\\n            'low' => $daily_min,\\n            'label' => $mapped['label'],\\n            'icon' => $mapped['icon'],\\n            'icon_url' => $this->get_icon_url($mapped['icon'])\\n        );\\n\\n        set_transient($this->cache_key, $result, $this->cache_ttl);\\n        return $result;\\n    }\\n\\n    private function get_icon_url($icon_slug) {\\n        $filename = sanitize_file_name($icon_slug) . '.svg';\\n        return esc_url_raw(trailingslashit(HWW_PLUGIN_URL . 'assets/icons') . $filename);\\n    }\\n\\n    private function map_weathercode($code) {\\n        // Mapping based on Open-Meteo weather codes\\n        $label = esc_html__('Unknown', 'homepage-weather-widget');\\n        $icon = 'wind';\\n\\n        $code = intval($code);\\n        if (in_array($code, array(0), true)) { // Clear sky\\n            /* translators: weather condition label */\\n            $label = esc_html__('Clear', 'homepage-weather-widget');\\n            $icon = 'clear-day';\\n        } elseif (in_array($code, array(1, 2), true)) { // Mainly clear, Partly cloudy\\n            /* translators: weather condition label */\\n            $label = esc_html__('Partly cloudy', 'homepage-weather-widget');\\n            $icon = 'partly-cloudy';\\n        } elseif (in_array($code, array(3), true)) { // Overcast\\n            /* translators: weather condition label */\\n            $label = esc_html__('Cloudy', 'homepage-weather-widget');\\n            $icon = 'cloudy';\\n        } elseif (in_array($code, array(45, 48), true)) { // Fog\\n            /* translators: weather condition label */\\n            $label = esc_html__('Fog', 'homepage-weather-widget');\\n            $icon = 'fog';\\n        } elseif (in_array($code, array(51, 53, 55, 56, 57), true)) { // Drizzle\\n            /* translators: weather condition label */\\n            $label = esc_html__('Drizzle', 'homepage-weather-widget');\\n            $icon = 'rain';\\n        } elseif (in_array($code, array(61, 63, 65, 66, 67), true)) { // Rain\\n            /* translators: weather condition label */\\n            $label = esc_html__('Rain', 'homepage-weather-widget');\\n            $icon = 'rain';\\n        } elseif (in_array($code, array(71, 73, 75, 77), true)) { // Snow\\n            /* translators: weather condition label */\\n            $label = esc_html__('Snow', 'homepage-weather-widget');\\n            $icon = 'snow';\\n        } elseif (in_array($code, array(80, 81, 82), true)) { // Rain showers\\n            /* translators: weather condition label */\\n            $label = esc_html__('Showers', 'homepage-weather-widget');\\n            $icon = 'rain';\\n        } elseif (in_array($code, array(85, 86), true)) { // Snow showers\\n            /* translators: weather condition label */\\n            $label = esc_html__('Snow showers', 'homepage-weather-widget');\\n            $icon = 'snow';\\n        } elseif (in_array($code, array(95, 96, 99), true)) { // Thunderstorm\\n            /* translators: weather condition label */\\n            $label = esc_html__('Thunderstorm', 'homepage-weather-widget');\\n            $icon = 'thunderstorm';\\n        }\\n\\n        return array(\\n            'label' => $label,\\n            'icon' => $icon,\\n        );\\n    }\\n}\\n\",\n  \"homepage-weather-widget/includes/class-hww-widget.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nclass HWW_Widget extends WP_Widget {\\n    public function __construct() {\\n        parent::__construct(\\n            'hww_widget',\\n            esc_html__('Homepage Weather Widget', 'homepage-weather-widget'),\\n            array('description' => esc_html__('Compact weather for Zurich (Celsius).', 'homepage-weather-widget'))\\n        );\\n    }\\n\\n    public function widget($args, $instance) {\\n        echo wp_kses_post($args['before_widget']);\\n\\n        $title = isset($instance['title']) ? $instance['title'] : '';\\n        if (!empty($title)) {\\n            /* translators: %s: widget title */\\n            $safe_title = apply_filters('widget_title', $title, $instance, $this->id_base);\\n            echo wp_kses_post($args['before_title']);\\n            echo esc_html($safe_title);\\n            echo wp_kses_post($args['after_title']);\\n        }\\n\\n        $service = new HWW_Weather_Service();\\n        $data = $service->get_weather();\\n\\n        $context = array();\\n        if (is_wp_error($data)) {\\n            $context['error'] = true;\\n            $context['message'] = esc_html__('Weather is currently unavailable for Zurich. Please try again later.', 'homepage-weather-widget');\\n        } else {\\n            $context['error'] = false;\\n            $context['temperature'] = $data['temperature'];\\n            $context['high'] = $data['high'];\\n            $context['low'] = $data['low'];\\n            $context['label'] = $data['label'];\\n            $context['icon'] = $data['icon'];\\n            $context['icon_url'] = $data['icon_url'];\\n        }\\n\\n        $markup = hww_get_widget_markup($context);\\n        echo wp_kses_post($markup);\\n\\n        echo wp_kses_post($args['after_widget']);\\n    }\\n\\n    public function form($instance) {\\n        $title = isset($instance['title']) ? $instance['title'] : '';\\n        $field_id = $this->get_field_id('title');\\n        $field_name = $this->get_field_name('title');\\n        ?>\\n        <p>\\n            <label for=\\\"<?php echo esc_attr($field_id); ?>\\\"><?php echo esc_html__('Title:', 'homepage-weather-widget'); ?></label>\\n            <input class=\\\"widefat\\\" id=\\\"<?php echo esc_attr($field_id); ?>\\\" name=\\\"<?php echo esc_attr($field_name); ?>\\\" type=\\\"text\\\" value=\\\"<?php echo esc_attr($title); ?>\\\" />\\n        </p>\\n        <?php\\n    }\\n\\n    public function update($new_instance, $old_instance) {\\n        $instance = array();\\n        $instance['title'] = isset($new_instance['title']) ? sanitize_text_field($new_instance['title']) : '';\\n        return $instance;\\n    }\\n}\\n\",\n  \"homepage-weather-widget/includes/functions.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\nfunction hww_get_widget_markup($context) {\\n    ob_start();\\n    include HWW_PLUGIN_DIR . 'templates/widget.php';\\n    $html = ob_get_clean();\\n    return $html;\\n}\\n\\n// Shortcode: [homepage_weather_widget]\\nfunction hww_shortcode_render($atts) {\\n    $atts = shortcode_atts(array(), $atts, 'homepage_weather_widget');\\n\\n    $service = new HWW_Weather_Service();\\n    $data = $service->get_weather();\\n\\n    $context = array();\\n    if (is_wp_error($data)) {\\n        $context['error'] = true;\\n        $context['message'] = esc_html__('Weather is currently unavailable for Zurich. Please try again later.', 'homepage-weather-widget');\\n    } else {\\n        $context['error'] = false;\\n        $context['temperature'] = $data['temperature'];\\n        $context['high'] = $data['high'];\\n        $context['low'] = $data['low'];\\n        $context['label'] = $data['label'];\\n        $context['icon'] = $data['icon'];\\n        $context['icon_url'] = $data['icon_url'];\\n    }\\n\\n    return hww_get_widget_markup($context);\\n}\\nadd_shortcode('homepage_weather_widget', 'hww_shortcode_render');\\n\",\n  \"homepage-weather-widget/assets/style.css\": \"/* Homepage Weather Widget Styles */\\n.hww-widget{display:flex;align-items:center;gap:.75rem;font-family:inherit;color:inherit}\\n.hww-icon{width:36px;height:36px;flex:0 0 36px}\\n.hww-meta{display:flex;flex-direction:column;gap:.15rem}\\n.hww-row{display:flex;align-items:baseline;gap:.5rem;flex-wrap:wrap}\\n.hww-temp{font-size:1.5rem;font-weight:600}\\n.hww-unit{opacity:.7}\\n.hww-range{opacity:.85;font-size:.9rem}\\n.hww-label{opacity:.85;font-size:.9rem}\\n.hww-error{padding:.75rem 1rem;border:1px solid rgba(0,0,0,.08);border-radius:4px;background:rgba(0,0,0,.02);font-size:.95rem}\\n@media (max-width:480px){.hww-temp{font-size:1.25rem}.hww-icon{width:30px;height:30px}}\\n\",\n  \"homepage-weather-widget/assets/script.js\": \"(function(){\\n    // No JS required for now. Placeholder for future enhancements.\\n})();\\n\",\n  \"homepage-weather-widget/assets/icons/clear-day.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"4\\\"/><path d=\\\"M12 2v2M12 20v2M4 12H2M22 12h-2M5 5l1.5 1.5M17.5 17.5L19 19M5 19l1.5-1.5M17.5 6.5L19 5\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/partly-cloudy.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M7 17h9a4 4 0 0 0 0-8 5.5 5.5 0 0 0-10.7-1.7\\\"/><path d=\\\"M7 17a3 3 0 1 1 0-6 5 5 0 0 1 9.6-1.9\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/cloudy.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M6 18h10a4 4 0 1 0 0-8 6 6 0 0 0-11.6 1.8A3.5 3.5 0 0 0 6 18z\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/rain.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M6 16h10a4 4 0 1 0 0-8 6 6 0 0 0-11.6 1.8A3.5 3.5 0 0 0 6 16z\\\"/><path d=\\\"M8 19l-1 2M12 19l-1 2M16 19l-1 2\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/snow.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M6 16h10a4 4 0 1 0 0-8 6 6 0 0 0-11.6 1.8A3.5 3.5 0 0 0 6 16z\\\"/><path d=\\\"M9 19l.5 1M12 19l.5 1M15 19l.5 1M9 21l.5 1M12 21l.5 1M15 21l.5 1\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/thunderstorm.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M6 15h10a4 4 0 1 0 0-8 6 6 0 0 0-11.6 1.8A3.5 3.5 0 0 0 6 15z\\\"/><path d=\\\"M10 16l-2 4h2l-1 3 4-5h-2l1-2z\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/fog.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 10h12M6 13h12M5 16h10\\\"/></svg>\",\n  \"homepage-weather-widget/assets/icons/wind.svg\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" aria-hidden=\\\"true\\\"><path d=\\\"M3 12h10a3 3 0 1 0-3-3\\\"/><path d=\\\"M5 16h12a2 2 0 1 1-2 2\\\"/></svg>\",\n  \"homepage-weather-widget/templates/widget.php\": \"<?php\\nif (!defined('ABSPATH')) {\\n    exit;\\n}\\n\\n$has_error = !empty($context['error']);\\n?>\\n<div class=\\\"hww-widget\\\" role=\\\"group\\\" aria-label=\\\"<?php echo esc_attr__('Zurich weather', 'homepage-weather-widget'); ?>\\\">\\n    <?php if ($has_error) : ?>\\n        <div class=\\\"hww-error\\\"><?php echo esc_html(isset($context['message']) ? $context['message'] : esc_html__('Weather is currently unavailable for Zurich. Please try again later.', 'homepage-weather-widget')); ?></div>\\n    <?php else : ?>\\n        <img class=\\\"hww-icon\\\" src=\\\"<?php echo esc_url(isset($context['icon_url']) ? $context['icon_url'] : ''); ?>\\\" alt=\\\"<?php echo esc_attr(isset($context['label']) ? $context['label'] : ''); ?>\\\" />\\n        <div class=\\\"hww-meta\\\">\\n            <div class=\\\"hww-row\\\">\\n                <span class=\\\"hww-temp\\\"><?php echo esc_html(number_format_i18n(floatval($context['temperature']), 0)); ?></span>\\n                <span class=\\\"hww-unit\\\"><?php echo esc_html__('\u00b0C', 'homepage-weather-widget'); ?></span>\\n                <span class=\\\"hww-label\\\"><?php echo esc_html($context['label']); ?></span>\\n            </div>\\n            <div class=\\\"hww-row hww-range\\\">\\n                <?php /* translators: %1$s: low temp, %2$s: high temp */ ?>\\n                <span><?php echo esc_html(sprintf(esc_html__('L %1$s\u00b0 / H %2$s\u00b0', 'homepage-weather-widget'), number_format_i18n(floatval($context['low']), 0), number_format_i18n(floatval($context['high']), 0))); ?></span>\\n            </div>\\n        </div>\\n    <?php endif; ?>\\n</div>\\n\",\n  \"homepage-weather-widget/languages/homepage-weather-widget.pot\": \"msgid \\\"\\\"\\nmsgstr \\\"\\\"\\n\\\"Project-Id-Version: Homepage Weather Widget 1.0.0\\\\n\\\"\\n\\\"POT-Creation-Date: 2025-08-24 00:00+0000\\\\n\\\"\\n\\\"MIME-Version: 1.0\\\\n\\\"\\n\\\"Content-Type: text/plain; charset=UTF-8\\\\n\\\"\\n\\\"Content-Transfer-Encoding: 8bit\\\\n\\\"\\n\\\"X-Domain: homepage-weather-widget\\\\n\\\"\\n\\n#: homepage-weather-widget.php:0\\nmsgid \\\"Homepage Weather Widget\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-widget.php:13\\nmsgid \\\"Compact weather for Zurich (Celsius).\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:33\\nmsgid \\\"Weather service is temporarily unavailable.\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:37\\nmsgid \\\"Unable to fetch weather data.\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:41\\nmsgid \\\"Received invalid weather data.\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:45\\nmsgid \\\"Weather data incomplete.\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:63\\nmsgid \\\"Unknown\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:68\\nmsgid \\\"Clear\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:72\\nmsgid \\\"Partly cloudy\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:76\\nmsgid \\\"Cloudy\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:80\\nmsgid \\\"Fog\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:84\\nmsgid \\\"Drizzle\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:88\\nmsgid \\\"Rain\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:92\\nmsgid \\\"Snow\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:96\\nmsgid \\\"Showers\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:100\\nmsgid \\\"Snow showers\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-weather-service.php:104\\nmsgid \\\"Thunderstorm\\\"\\nmsgstr \\\"\\\"\\n\\n#: includes/class-hww-widget.php:30 templates/widget.php:9 includes/functions.php:19\\nmsgid \\\"Weather is currently unavailable for Zurich. Please try again later.\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/widget.php:6\\nmsgid \\\"Zurich weather\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/widget.php:14\\nmsgid \\\"\u00b0C\\\"\\nmsgstr \\\"\\\"\\n\\n#: templates/widget.php:18\\nmsgid \\\"L %1$s\u00b0 / H %2$s\u00b0\\\"\\nmsgstr \\\"\\\"\\n\"\n}\n```"
    }
  ]
}